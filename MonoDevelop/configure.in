AC_INIT([monodevelop], 0.5.99, [monodevelop-list@lists.ximian.com])
AC_PREREQ(2.53)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE([1.9 tar-ustar])
AM_MAINTAINER_MODE

AM_DISABLE_STATIC
AM_PROG_LIBTOOL
AC_PROG_INTLTOOL([0.25])

AM_PATH_GLIB_2_0

ASSEMBLY_VERSION=0.5.1.0

AC_PATH_PROG(MONO, mono)
AC_PATH_PROG(MCS, mcs)
AC_PATH_PROG(XDGMIME, update-mime-database, no)

if test "x$MONO" = "x" ; then
  AC_PATH_PROG(MINT, mint)
  if test "x$MINT" = "x" ; then
	AC_MSG_ERROR([Can't find "mono" or "mint" in your PATH])
  fi
fi

if test "x$MCS" = "x" ; then
  AC_MSG_ERROR([Can't find "mcs" in your PATH])
fi
AC_SUBST(PATH)
AC_SUBST(LD_LIBRARY_PATH)

dnl Find pkg-config
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
        AC_MSG_ERROR([You need to install pkg-config])
fi

dnl unmanaged hard dependencies
GNOMEVFS_REQUIRED_VERSION=2.0
PKG_CHECK_MODULES(UNMANAGED_DEPENDENCIES,
gnome-vfs-2.0 >= $GNOMEVFS_REQUIRED_VERSION
)

MONO_REQUIRED_VERSION=1.0
PKG_CHECK_MODULES(UNMANAGED_DEPENDENCIES_MONO,mono >= $MONO_REQUIRED_VERSION, has_mono=true, has_mono=false)
PKG_CHECK_MODULES(UNMANAGED_DEPENDENCIES_MINT,mint >= $MONO_REQUIRED_VERSION, has_mint=true, has_mint=false)
PKG_CHECK_MODULES(OEE_CHECK,mono >= 1.1.2.99, MONO_POSIX_OEE=-d:MONO_POSIX_OEE, MONO_POSIX_OEE=)

if test "x$has_mono" = "xtrue"; then
    if test `uname -s` = "Darwin"; then
	AC_PATH_PROG(RUNTIME, mono, no)
	AC_PATH_PROG(CSC, mcs, no)
	LIB_PREFIX=
	LIB_SUFFIX=.dylib
    else
	AC_PATH_PROG(RUNTIME, mono, no)
	AC_PATH_PROG(CSC, mcs, no)
	LIB_PREFIX=.so
	LIB_SUFFIX=
    fi
else
    if test "x$has_mint" = "xtrue"; then
	AC_PATH_PROG(RUNTIME, mint, no)
	AC_PATH_PROG(CSC, mcs, no)
	LIB_PREFIX=.so
	LIB_SUFFIX=
    fi
fi


dnl hard dependencies
GTKSHARP_REQUIRED_VERSION=1.0
GTKSOURCEVIEWSHARP_REQUIRED_VERSION=0.6.99
GECKOSHARP_REQUIRED_VERSION=0.5
MONODOC_REQUIRED_VERSION=1.0

PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)
AC_SUBST(GTK_SHARP_LIBS)
PKG_CHECK_MODULES(GNOME_SHARP, gnome-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)
AC_SUBST(GNOME_SHARP_LIBS)
PKG_CHECK_MODULES(GLADE_SHARP, glade-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)
AC_SUBST(GLADE_SHARP_LIBS)
PKG_CHECK_MODULES(GCONF_SHARP, gconf-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)
AC_SUBST(GCONF_SHARP_LIBS)
PKG_CHECK_MODULES(GTKHTML_SHARP, gtkhtml-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)
AC_SUBST(GTKHTML_SHARP_LIBS)
PKG_CHECK_MODULES(GTKSOURCEVIEW_SHARP, gtksourceview-sharp >= $GTKSOURCEVIEWSHARP_REQUIRED_VERSION)
AC_SUBST(GTKSOURCEVIEW_SHARP_LIBS)
PKG_CHECK_MODULES(GECKO_SHARP, gecko-sharp >= $GECKOSHARP_REQUIRED_VERSION)
AC_SUBST(GECKO_SHARP_LIBS)
PKG_CHECK_MODULES(MONODOC, monodoc >= $MONODOC_REQUIRED_VERSION)
AC_SUBST(MONODOC_LIBS)

gtksharp_prefix="`$PKG_CONFIG --variable=prefix gtk-sharp-2.0`"
AC_SUBST(gtksharp_prefix)

dnl GdlDock requirements and configuration
GTK_REQUIRED=2.2.0
LIBXML_REQUIRED=2.2.8
LIBGLADE_REQUIRED=2.0.0
PKG_CHECK_MODULES(GDLDOCK, 
	gtk+-2.0 >= $GTK_REQUIRED 
	libglade-2.0 >= $LIBGLADE_REQUIRED
	libxml-2.0 >= $LIBXML_REQUIRED)
AC_SUBST(GDLDOCK_CFLAGS)
AC_SUBST(GDLDOCK_LIBS)

dnl marshal and enum generators
GLIB_GENMARSHAL="`$PKG_CONFIG --variable=glib_genmarshal glib-2.0`"
AC_SUBST(GLIB_GENMARSHAL)
GLIB_MKENUMS="`$PKG_CONFIG --variable=glib_mkenums glib-2.0`"
AC_SUBST(GLIB_MKENUMS)

dnl find mono debugger
dnl MONO_DEBUGGER_REQUIRED_VERSION=0.9
dnl PKG_CHECK_MODULES(MONO_DEBUGGER, mono-debugger >= $MONO_DEBUGGER_REQUIRED_VERSION, enable_debugger=yes, enable_debugger=no)
dnl AC_SUBST(MONO_DEBUGGER_LIBS)
enable_debugger=no

MOZILLA_HOME="`$PKG_CONFIG --variable=libdir mozilla-gtkmozembed`"
AC_SUBST(MOZILLA_HOME)

gnome_prefix="`$PKG_CONFIG --variable=prefix libgnome-2.0`"

if test "x$gnome_prefix" = "x"; then
	AC_MSG_ERROR([Unable to determine gnome prefix. Please install that package that contains libgnome-2.0.pc and make sure it is in your accessible via pkg-config])
fi

AC_SUBST(gnome_prefix)

if test "x$XDGMIME" = "xno" ; then
enable_xdgmime="no"
else
enable_xdgmime="yes"
fi

AM_CONDITIONAL(ENABLE_DEBUGGER, test "x$enable_debugger" = "xyes")
AM_CONDITIONAL(ENABLE_XDGMIME, test "x$enable_xdgmime" = "xyes")

AC_ARG_ENABLE(update-mimedb,
   AC_HELP_STRING([--disable-update-mimedb],
                   [disable the update-mime-database after install [default=no]]),,
    enable_update_mimedb=yes)
 AM_CONDITIONAL(ENABLE_UPDATE_MIMEDB, test x$enable_update_mimedb = xyes)


dnl Intl
ALL_LINGUAS="da es fr ja_JP pt_BR tr"
GETTEXT_PACKAGE=monodevelop
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
AM_GLIB_GNU_GETTEXT

AC_SUBST(LIB_SUFFIX)
AC_SUBST(LIB_PREFIX)
AC_SUBST(ASSEMBLY_VERSION)
AC_SUBST(MONO_POSIX_OEE)

AC_OUTPUT([
Makefile
Core/Makefile
Core/gdldock/Makefile
Core/gdldock/gdl/Makefile
Core/gdldock/sources/Makefile
Core/gdldock/sources/gdl/Makefile
Core/gdldock/gdl/gdl-sharp.dll.config
Core/src/Makefile
Core/src/AddIns/Makefile
Core/src/AddIns/BackendBindings/Makefile
Core/src/AddIns/BackendBindings/CSharpBinding/Makefile
Core/src/AddIns/BackendBindings/JavaBinding/Makefile
Core/src/AddIns/BackendBindings/ILAsmBinding/Makefile
Core/src/AddIns/BackendBindings/NemerleBinding/Makefile
Core/src/AddIns/BackendBindings/VBNetBinding/Makefile
Core/src/AddIns/BackendBindings/VBNetBinding/SharpRefactoryVB/Makefile
Core/src/AddIns/DisplayBindings/Makefile
Core/src/AddIns/DisplayBindings/SourceEditor/Makefile
Core/src/AddIns/DisplayBindings/SourceEditor/MonoDevelop.SourceEditor.dll.config
Core/src/AddIns/DebuggerAddIn/Makefile
Core/src/MonoDevelop.Base/Makefile
Core/src/MonoDevelop.Base/MonoDevelop.Base.dll.config
Core/src/MonoDevelop.Startup/Makefile
Core/src/MonoDevelop.Core/Makefile
Core/src/MonoDevelop.Gui.Utils/Makefile
Core/src/MonoDevelop.Gui.Utils/MonoDevelop.Gui.Utils.dll.config
Core/src/MonoDevelop.Gui.Widgets/Makefile
Core/src/ICSharpCode.SharpAssembly/Makefile
Core/src/ICSharpCode.SharpRefactory/Makefile
Core/src/Tools/Makefile
Core/src/Tools/SharpCoco/Makefile
Core/src/Tools/dbgen/Makefile
build/Makefile
build/data/Makefile
build/data/resources/Makefile
build/data/options/Makefile
build/data/resources/css/Makefile
build/data/resources/icons/Makefile
Core/src/AddIns/DebuggerAddIn/AssemblyInfo.cs
Core/src/AddIns/DisplayBindings/SourceEditor/AssemblyInfo.cs
Core/src/MonoDevelop.Startup/AssemblyInfo.cs
Core/src/MonoDevelop.Base/AssemblyInfo.cs
Core/src/MonoDevelop.Gui.Widgets/AssemblyInfo.cs
Core/src/MonoDevelop.Gui.Utils/AssemblyInfo.cs
Core/src/MonoDevelop.Core/AssemblyInfo.cs
monodevelop
po/Makefile.in
Core/src/AddIns/prj2make-sharp-lib/Makefile
Core/src/AddIns/prj2make-sharp-lib/AssemblyInfo.cs
Core/src/AddIns/BackendBindings/NemerleBinding/NemerleBindingExecutionServices.cs
Core/src/AddIns/BackendBindings/CSharpBinding/CSharpBindingExecutionManager.cs
])

echo "---"
echo "Configuration summary"
echo ""
echo "   * Installation prefix = $prefix"
echo "   * GNOME prefix = $gnome_prefix"
echo "   * C# compiler = $CSC"
echo ""
echo "   * mono-debugger: disabled in this release."
echo ""
echo "   NOTE: if any of the above say 'no' you may install the"
echo "         corresponding development packages for them, and"
echo "         rerun autogen.sh. If you are sure the proper"
echo "         libraries are installed, use PKG_CONFIG_PATH to"
echo "         point to their .pc files"
echo ""
echo "---"
