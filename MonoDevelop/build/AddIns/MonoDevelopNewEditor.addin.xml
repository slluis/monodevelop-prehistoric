<AddIn name        = "New Editor"
       author      = "Ben Maurer"
       copyright   = ""
       url         = ""
       description = ""
       version     = "1.0.0">
	
	<Runtime>
		<Import assembly="../bin/MonoDevelop.SourceEditor.dll"/>
		<!-- <Import assembly="../bin/MonoDevelop.TextEditor.dll"/> -->
		<!-- <Import assembly="../bin/MonoDevelop.DefaultTexteditor.dll"/> -->
	</Runtime>
	
	<Extension path = "/SharpDevelop/Dialogs/OptionsDialog/CodingOptions">
		<DialogPanel id = "CodeTemplates"
		             _label = "${res:Dialog.Options.CodeTemplatesText}"
		             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.CodeTemplatePane"/>
	</Extension>

	<Extension path = "/SharpDevelop/Views/ProjectBrowser/ContextMenu">
		<!-- AddIn to the Project Add Menu -->
		<!-- <Conditional ownerstate="ProjectSelected">
			<MenuItem id = "ExportToHtml"
			          insertafter = "GenerateDocumentation"
			          insertbefore = "Separator5"
			          _label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
			          class = "MonoDevelop.DefaultEditor.Commands.ExportProjectToHtml"/>
		</Conditional> -->
	</Extension>
	
	<!-- <Extension path = "/SharpDevelop/Workbench/MainMenu/Project">
		<Conditional activeproject="*">
			<MenuItem id = "ExportToHtml"
			          insertafter = "GenerateDocumentation"
			          insertbefore = "Separator2"
			          _label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
			          class = "MonoDevelop.DefaultEditor.Commands.ExportProjectToHtml"/>
		</Conditional>
	</Extension> -->
	
	<Extension path = "/SharpDevelop/Views/ProjectBrowser/ContextMenu/ProjectBrowserNode">
		<!-- AddIn to the project browser context menu -->
		<!-- <Conditional activeproject="*">
			<MenuItem id = "ExportToHtml"
			          insertafter = "GenerateDocumentation"
			          insertbefore = "SetAsStartupProjectSeparator"
			          _label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
			          class = "MonoDevelop.DefaultEditor.Commands.ExportProjectToHtml"/>
		</Conditional> -->
	</Extension>
	
	<Extension path = "/SharpDevelop/Workbench/Views">
		<Class id    = "CompilerMessageView" 
		       class = "MonoDevelop.EditorBindings.Gui.Pads.CompilerMessageView"/>
	</Extension>

	<Extension path = "/SharpDevelop/ViewContent/DefaultTextEditor/ContextMenu">
		<MenuItem id = "Cut"
		          _label = "${res:XML.TextAreaContextMenu.Cut}"
		          icon = "Icons.16x16.CutIcon"
		          shortcut = "Control|X"
		          class = "MonoDevelop.Commands.Cut"/>
		<MenuItem id = "Copy"
		          _label = "${res:XML.TextAreaContextMenu.Copy}"
		          icon = "Icons.16x16.CopyIcon"
		          shortcut = "Control|C"
		          class = "MonoDevelop.Commands.Copy"/>
		<MenuItem id = "Paste"
		          _label = "${res:XML.TextAreaContextMenu.Paste}"
		          icon = "Icons.16x16.PasteIcon"
		          shortcut = "Control|V"
		          class = "MonoDevelop.Commands.Paste"/>
		<MenuItem id = "Delete"
		          _label = "${res:XML.MainMenu.EditMenu.Delete}"
		          icon = "Icons.16x16.DeleteIcon"
		          class = "MonoDevelop.Commands.Delete"/>
		<MenuItem id = "Separator1" _label = "-" />
		<MenuItem id = "Save"
		          _label = "${res:XML.MainMenu.FileMenu.Save}"
		          icon = "Icons.16x16.SaveIcon"
		          shortcut = "Control|S"
		          class = "MonoDevelop.Commands.SaveFile"/>
		<MenuItem id = "SaveAs"
		          _label = "${res:XML.MainMenu.FileMenu.SaveAs}"
		          class = "MonoDevelop.Commands.SaveFileAs"/>
		<MenuItem id = "File"
		          _label = "${res:XML.MainMenu.FileMenu.Close}"
		          class ="MonoDevelop.Commands.CloseFile"/>
		<MenuItem id = "Separator2" _label = "-" />
		<MenuItem id = "Comment"
		          icon  = "Icons.16x16.CommentRegion"
		          _label = "${res:XML.TextAreaContextMenu.CommentUncommentSelection}"
		          class= "MonoDevelop.DefaultEditor.Commands.CommentRegion"/>
<!--		<MenuItem id = "Uncomment"
		          icon  = "Icons.16x16.UnCommentRegion"
                  _label = "${res:XML.TextAreaContextMenu.UncommentSelection}"
		          class= "MonoDevelop.DefaultEditor.Commands.UncommentRegion"/>-->
		<MenuItem id = "Indent"
		          _label = "${res:XML.TextAreaContextMenu.Indent}"
		          shortcut = "Control|I"
		          class = "MonoDevelop.DefaultEditor.Commands.IndentSelection" />
		
		<MenuItem id = "FileMode" _label = "${res:XML.TextAreaContextMenu.FileMode}">
			<MenuItem id = "HighlightBuilder" _label = "bogus_label" class = "MonoDevelop.DefaultEditor.Commands.HighlightingTypeBuilder" />
		</MenuItem>
		
		<MenuItem id = "Separator3" _label = "-" />
		<MenuItem id = "Options"
		          _label = "${res:XML.TextAreaContextMenu.BufferOptions}"
		          icon = "Icons.16x16.PropertiesIcon"
		          class ="MonoDevelop.DefaultEditor.Commands.ShowBufferOptions"/>
	</Extension>

	<Extension path = "/SharpDevelop/Workbench/ToolBar/Standard">
			<Conditional action="Disable">
				<Or>
					<Condition activewindow="MonoDevelop.SourceEditor.Gui.SourceEditorDisplayBindingWrapper"/>
					<Condition openproject="*"/>
				</Or>
			
				<ToolbarItem id = "Find"
				             icon = "Icons.16x16.FindIcon" 
				             tooltip = "${res:XML.MainMenu.SearchMenu.Find.Description}"
				             class = "MonoDevelop.DefaultEditor.Commands.Find"/>
				<ToolbarItem id = "FindNext"
				             icon = "Icons.16x16.FindNextIcon"
				             tooltip = "${res:XML.MainMenu.SearchMenu.FindNext.Description}"
				             class = "MonoDevelop.DefaultEditor.Commands.FindNext"/>
				<ToolbarItem id = "Replace"
				             icon = "Icons.16x16.ReplaceIcon" 
				             tooltip = "${res:XML.MainMenu.SearchMenu.Replace.Description}"
				             class = "MonoDevelop.DefaultEditor.Commands.Replace"/>	
			</Conditional>             
			<ToolbarItem id = "SearchSeparator" tooltip = "-"/>
			<Conditional activewindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
<!--				<ToolbarItem id = "Comment"
				             icon = "Icons.16x16.CommentRegion" 
				             tooltip = "${res:XML.TextAreaContextMenu.CommentUncommentSelection}"
				             class = "MonoDevelop.DefaultEditor.Commands.CommentRegion"/> -->
<!--				<ToolbarItem id = "Uncomment"
				             icon = "Icons.16x16.UnCommentRegion"
				             tooltip = "${res:XML.TextAreaContextMenu.UncommentSelection}"
				             class = "MonoDevelop.DefaultEditor.Commands.UncommentRegion"/> -->
			
<!--				<ToolbarItem id = "SearchSeparator2" tooltip = "-"/> -->
				<ToolbarItem id = "ToggleBookmark"
				             icon = "Icons.16x16.ToggleBookmark"
				             tooltip = "${res:XML.MainMenu.SearchMenu.ToggleBookmark.Description}"
				             class = "MonoDevelop.EditorBindings.Commands.ToggleBookmark"/>
				<ToolbarItem id = "PrevBookmark"
				             icon = "Icons.16x16.GotoPrevbookmark"
				             tooltip = "${res:XML.MainMenu.SearchMenu.PrevBookmark.Description}"
				             class = "MonoDevelop.EditorBindings.Commands.PrevBookmark"/>
				<ToolbarItem id = "NextBookmark"
				             icon = "Icons.16x16.GotoNextbookmark"
				             tooltip = "${res:XML.MainMenu.SearchMenu.NextBookmark.Description}"
				             class = "MonoDevelop.EditorBindings.Commands.NextBookmark"/>
				<ToolbarItem id = "ClearBookmarks"
				             icon = "Icons.16x16.ClearAllBookmarks"
					     tooltip = "${res:XML.MainMenu.SearchMenu.ClrBookmark.Description}"
				             class = "MonoDevelop.EditorBindings.Commands.ClearBookmarks"/>
			</Conditional>
	</Extension>
	
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu">
	        <MenuItem id = "Search" insertafter ="View" insertbefore ="Tools" _label = "${res:XML.MainMenu.SearchMenu}">
	                <Conditional action="Disable">
		                <Or>
		                	<Condition openwindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider"/>
		                	<Condition openproject="*"/>
		                </Or>
		                
		                <MenuItem id = "Find"
		                          _label = "${res:XML.MainMenu.SearchMenu.Find}" 
		                          icon = "Icons.16x16.FindIcon" 
		                          description = "${res:XML.MainMenu.SearchMenu.Find.Description}" 
		                          shortcut = "Control|F" 
		                          class = "MonoDevelop.DefaultEditor.Commands.Find"/>
		                <MenuItem id = "FindNext"
		                          _label = "${res:XML.MainMenu.SearchMenu.FindNext}" 
		                          icon = "Icons.16x16.FindNextIcon" 
		                          description = "${res:XML.MainMenu.SearchMenu.FindNext.Description}" 
		                          shortcut = "F3"
		                          class = "MonoDevelop.DefaultEditor.Commands.FindNext"/>
		                <MenuItem id = "Replace"
		                          _label = "${res:XML.MainMenu.SearchMenu.Replace}" 
		                          icon = "Icons.16x16.ReplaceIcon" 
		                          description = "${res:XML.MainMenu.SearchMenu.Replace.Description}" 
		                          shortcut = "Control|R"
		                          class = "MonoDevelop.DefaultEditor.Commands.Replace"/>
		        </Conditional>
		        
		        <MenuItem id = "SearchSeparator" _label = "-" />
	                <MenuItem id = "FindInFiles"
	                          _label = "${res:XML.MainMenu.SearchMenu.FindInFiles}" 
	                          icon = "Icons.16x16.FindInFiles" 
	                          description = "${res:XML.MainMenu.SearchMenu.FindInFiles.Description}" 
	                          class = "MonoDevelop.DefaultEditor.Commands.FindInFiles"/>
	                <MenuItem id = "ReplaceInFiles"
	                          _label = "${res:XML.MainMenu.SearchMenu.ReplaceInFiles}" 
	                          icon = "Icons.16x16.ReplaceInFiles" 
	                          description = "${res:XML.MainMenu.SearchMenu.ReplaceInFiles.Description}" 
	                          class = "MonoDevelop.DefaultEditor.Commands.ReplaceInFiles"/>
	                
	                <MenuItem id = "SearchInFilesSeparator" _label = "-" />
	                <Conditional activewindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
			        
		                <MenuItem id = "ToggleBookmark"
		                          _label = "${res:XML.MainMenu.SearchMenu.ToggleBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.ToggleBookmark.Description}" 
		                          shortcut = "Control|F2"
		                          icon = "Icons.16x16.ToggleBookmark"
		                          class = "MonoDevelop.EditorBindings.Commands.ToggleBookmark"/>
		                <MenuItem id = "PrevBookmark"
		                          _label = "${res:XML.MainMenu.SearchMenu.PrevBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.PrevBookmark.Description}" 
		                          shortcut = "Alt|F2"
		                          icon = "Icons.16x16.GotoPrevbookmark"
		                          class = "MonoDevelop.EditorBindings.Commands.PrevBookmark"/>
		                <MenuItem id = "NextBookmark"
		                          _label = "${res:XML.MainMenu.SearchMenu.NextBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.NextBookmark.Description}" 
		                          shortcut = "F2" 
		                          icon = "Icons.16x16.GotoNextbookmark"
		                          class = "MonoDevelop.EditorBindings.Commands.NextBookmark"/>
		                <MenuItem id = "ClearBookmarks"
		                          _label = "${res:XML.MainMenu.SearchMenu.ClrBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.ClrBookmark.Description}"
		                          icon = "Icons.16x16.ClearAllBookmarks"
		                          class = "MonoDevelop.EditorBindings.Commands.ClearBookmarks"/>
		                <MenuItem id = "Separator2" _label = "-" />
		                <MenuItem id = "GotoLineNr"
		                          _label = "${res:XML.MainMenu.SearchMenu.GotoLineNr}" 
		                          description = "${res:XML.MainMenu.SearchMenu.GotoLineNr.Description}" 
		                          shortcut = "Control|G"
		                          class = "MonoDevelop.DefaultEditor.Commands.GotoLineNumber"/>
		                <MenuItem id = "Separator3" _label = "-" />
		                <MenuItem id = "GotoBrace"
		                          _label = "${res:XML.MainMenu.SearchMenu.GotoBrace}" 
		                          description = "${res:XML.MainMenu.SearchMenu.GotoBrace.Description}" 
		                          shortcut = "Control|B"
		                          class = "MonoDevelop.DefaultEditor.Commands.GotoMatchingBrace"/>
		</Conditional>
		</MenuItem>
	</Extension>
	
	<!--
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Window">
		<Conditional activewindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
			<MenuItem id = "SplitTextEditor"
			          insertafter="NxtPrvSeparator"
			          insertbefore="CloseAll"
			          _label = "${res:XML.MainMenu.WindowMenu.Split}"
			          icon  = "Icons.16x16.SplitWindow"
			          description = "${res:XML.MainMenu.WindowMenu.Split.Description}"
			          class ="MonoDevelop.DefaultEditor.Commands.SplitTextEditor"/>
		</Conditional> 
	</Extension>
	-->
	
	<!-- <Extension path = "/SharpDevelop/Workbench/MainMenu/Edit">
                <MenuItem insertafter = "Delete" insertbefore = "SelectAll" id = "Separator2" _label = "-" />
                <MenuItem insertafter = "Separator2" insertbefore = "Separator3" id = "Format" _label = "${res:XML.MainMenu.EditMenu.FormatMenu}">
	                <Conditional activewindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
                        
                        <MenuItem id = "RemoveLeadingWs" 
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.RemoveLeadingWS"/>
                        <MenuItem id = "RemoveTrailingWs"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs.Description}"
                                  class ="MonoDevelop.DefaultEditor.Commands.RemoveTrailingWS"/>
                        <MenuItem id = "Seperator1" _label = "-" />
                        <MenuItem id = "UpperCase"  
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase}" 
                                  icon = "Icons.16x16.LowerToUpperCase" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.ToUpperCase"/>
                        <MenuItem id = "LowerCase" 
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase}" 
                                  icon = "Icons.16x16.UpperToLowerCase" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase.Description}"
                                  class ="MonoDevelop.DefaultEditor.Commands.ToLowerCase"/>
                        <MenuItem id = "Capitalize"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.CapitalizeAction"/>
                        <MenuItem id = "InvertCase"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.InvertCaseAction"/>
                        <MenuItem id = "Separator2" _label = "-" />
                        <MenuItem id = "SortSelection"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.SortLines}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.SortLines.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.SortSelection"/>
                        <MenuItem id = "Separator3" _label = "-" />
                        <MenuItem id = "Tabs2Spaces" 
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.ConvertTabsToSpaces"/>
                        <MenuItem id = "Spaces2Tabs"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab}"
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab.Description}"
                                  class ="MonoDevelop.DefaultEditor.Commands.ConvertSpacesToTabs"/>
                        <MenuItem id = "LeadingTabs2Spaces"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space}"
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.ConvertLeadingTabsToSpaces"/>
                        <MenuItem id = "LeadingSpaces2Tabs"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab}"   
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab.Description}" 
                                  class ="MonoDevelop.DefaultEditor.Commands.ConvertLeadingSpacesToTabs"/>
        		</Conditional>
                </MenuItem>
                <MenuItem insertafter = "Format" insertbefore = "Separator3" id = "Folding" _label = "${res:XML.MainMenu.EditMenu.FoldingMenu}">
	                <Conditional activewindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
	                        <MenuItem id          = "ToggleFolding"
        	                          _label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ToggleFolding}"
                	                  description = "Toggles the current selected folding"
					  shortcut    = "Shift|Control|M"
	                                  class       = "MonoDevelop.DefaultEditor.Commands.ToggleFolding"/>
	                        <MenuItem id          = "ToggleAllFoldings"
        	                          _label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ToggleAllFoldings}"
	         	                  description = "Toggles all foldings" 
       					  shortcut    = "Shift|Control|L"
	                                  class       = "MonoDevelop.DefaultEditor.Commands.ToggleAllFoldings"/>
	                        <MenuItem id          = "ShowDefinitionsOnly"
        	                          _label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ShowDefinitions}"
                	                  description = "Shows only the definitions" 
       					  shortcut    = "Shift|Control|P"
	                                  class       = "MonoDevelop.DefaultEditor.Commands.ShowDefinitionsOnly"/>
        		</Conditional>
                </MenuItem>
                <MenuItem insertafter = "Separator2" insertbefore = "SelectAll" id = "Separator3" _label = "-" />
	</Extension> -->

	<Extension path = "/SharpDevelop/ViewContent/DefaultTextEditor/OptionsDialog">
		<DialogPanel id = "General"
		             _label = "${res:Dialog.Options.IDEOptions.TextEditor.General.PanelName}"
		             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.GeneralTextEditorPanel"/>
		<DialogPanel id = "Markers"
		             _label = "${res:Dialog.Options.IDEOptions.TextEditor.Markers.PanelName}"
		             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.MarkersTextEditorPanel"/>
		<DialogPanel id = "Behavior"
		             _label = "${res:Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName}"
		             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.BehaviorTextEditorPanel"/>
	</Extension>
	
	<Extension path = "/SharpDevelop/Dialogs/OptionsDialog">
		<DialogPanel id    = "TextEditorOptions"
		             insertafter = "CodingOptions"
		             insertbefore = "ToolsOptions"
		             _label = "${res:Dialog.Options.IDEOptions.TextEditorOptionsText}">
			<DialogPanel id = "General"
			             _label = "${res:Dialog.Options.IDEOptions.TextEditor.General.PanelName}"
			             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.GeneralTextEditorPanel"/>
			<DialogPanel id = "Markers"
			             _label = "${res:Dialog.Options.IDEOptions.TextEditor.Markers.PanelName}"
			             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.MarkersTextEditorPanel"/>
			<DialogPanel id = "Behavior"
			             _label = "${res:Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName}"
			             class = "MonoDevelop.EditorBindings.Gui.OptionPanels.BehaviorTextEditorPanel"/>
		</DialogPanel>
	</Extension>
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Tools">
		<Conditional activewindow="MonoDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
			<!--<MenuItem id = "InsertColor"
			          insertafter = "Separator1" insertbefore = "Separator2"
			          _label = "${res:XML.MainMenu.ToolMenu.InsColor}" 
			          description = "${res:XML.MainMenu.ToolMenu.InsColor.Description}" 
			          class = "MonoDevelop.DefaultEditor.Commands.ShowColorDialog"/> -->
			<MenuItem id = "Separator2" _label = "-" />

		<!--	<MenuItem id = "GenerateCodeAction"
			          insertafter = "Separator2"
			          _label = "${res:XML.MainMenu.ToolMenu.GenerateCode}" 
			          description = "${res:XML.MainMenu.ToolMenu.GenerateCode.Description}" 
			          class = "MonoDevelop.DefaultEditor.Commands.GenerateCodeAction"/>
			<MenuItem id = "ShowQuickHelp"
			          _label = "${res:XML.MainMenu.ToolMenu.QuickXmlDoc}" 
			          description = "${res:XML.MainMenu.ToolMenu.QuickXmlDoc.Description}" 
			          shortcut = "Control|Q"
			          class = "MonoDevelop.DefaultEditor.Commands.QuickDocumentation"/> 
			<MenuItem id = "Separator3" _label = "-" /> -->
		</Conditional>
	</Extension>
	
	<Extension path = "/SharpDevelop/DefaultEditor/SearchAndReplace/WildcardHelpPath">
		<MenuItem id    = "*Char"
		          _label = "* Zero or more of any character" />
		<MenuItem id    = "?Char"
		          _label = "? Any single character" />
		<MenuItem id    = "#Char"
		          _label = "# Any single digit" />
		<MenuItem id    = "[]Char"
		          _label = "[] Any one character in the set" />
		<MenuItem id    = "[!]Char"
		          _label = "[!] Any one character not in the set" />
	</Extension>
	
	<!-- Note : Most actions are put directly into the control, because 
	            they're used for the standalone version too, only put keys in the
	            tree that are sharpdevelop specific, general keys put into TextAreaControl.GenerateDefaultActions --> 
	<Extension path = "/AddIns/DefaultTextEditor/EditActions">
		<EditAction id = "TemplateCompletion" class = "MonoDevelop.DefaultEditor.Actions.TemplateCompletion"  keys = "Control|J"/>		
		<EditAction id = "IndentSelection" class = "MonoDevelop.TextEditor.Actions.IndentSelection"  keys = "Control|I"/>		
	</Extension>

	<Extension path = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id    = "NewText"
		       supportedformats = "Text Files,Source Files"
		       class = "MonoDevelop.SourceEditor.Gui.SourceEditorDisplayBinding" />
	</Extension>
	
</AddIn>
