NOTE: This file is deprecated please use bugzilla instead.
http://bugzilla.ximian.com/

Editor
------
- Get code-folding working (not implemented in #d).
- printing support
- parser segfaults on complex files
- cut/copy is slow

Usability
---------

	Rename `Combine' to `Solution' everywhere.
	Add `Add Item', `Add new Item' to Solution so we can add new file types.
		

`New Project', `New file' dialog box redesign
---------------------------------------------

	Given that today, and for the near few months we wont support other
	things other than C# well, I suggest that instead of having a box on the
	left listing tons of languages we dont support, we move to:

		Console Apps
		GUI apps.
		Web-based apps.	
		Other kind of apps.

	The right hand side could contains an XD2-like control center, with more
	space or more options instead of an icon list, something like this:

		Main Applications
		-----------------
		OOOOOO    OOOOOO
		OOOOOO    OOOOOO
		OOOOOO    OOOOOO
		Gtk#      Gnome

		Subclasses
		----------
		OOOOOO    OOOOO
		OOOOOO    OOOOO
		OOOOOO    OOOOO
		Window	  DrawingArea

WebForms Support
---------------

	Add support for creating ASP.NET based webforms, which means:
		* Add a template.
		* When adding a new `item' of type .aspx, also create by default
		  a item.aspx.cs for the code-behind code (the user can choose to
		  leave it empty).
		* Add a Makefile to build this thing?

WebServices support
-------------------
	Add `Add Web Reference' support to the IDE in the Solutions tab.
	Create a mini-web browser to browse arbitrary URLS, and find any .wsdl documents on it
	Import WSDL documents, generate the url.wsdl file.
	Add this to the Makefile

Building code
-------------

	I have no idea (miguel) how the code is being built, but maybe whatever information
	we have should be turned into a Makefile.  This has the advantage that anyone
	can build without MonoDevelop our solutions (think of people doing deployments on 
	a web page: they could just copy the directory, and type `make install').

	Cute other option: support `make dist', to create a package, generate our own
	`configure' file (does not need to be automake-based, look at Nemerle's very cute
	shell-based system).

	Further thought: in the past autoconf made sense to detect system-op-isms, today
	it is mostly used to detect packages installed and do macro expansion;   The detection
	has been already taken care of with `pkg-config' (look at nemerle's nice setup).

Remove the /recurse *.cs option
-------------------------------

	When calling mcs, it should do this through the Makefile, not through calling mcs /recurse
	or anything like that, since it leads to errors (also the Makefile has the advantages
	described before)

CodeCompletion
--------------
- should not be enabled unless known mimetype
- Backspace is caught by KeyReleaseEvent instead of KeyPressEvent
- Add option for autopopup on/off and a ctrl+space keybinding

Dock
----

Html
----
- CSS support
- visibility bug

Projects
--------
- Implement Drag and Drop support

Pads
----

AddIns
------
- StartPage event handling

Dialogs
-------
- Implement menu items (see MonoDevelopBrokenMenuItems.txt)
- Port dialogs (see README for HIG info)
- Implement the remaining Option Dialogs (jba)
- Glade and HIG-ification of dialogs
- CodeCompletion generation exit and restart cleanly

Help
----
- Implement binding with monodoc to allow InsightWindow to work properly
- Implement Help Scout 
- Tie Help Scout to monodoc

NewFileDialog
-------------
- doesnt save settings (last category/template). (Blair)
- "Wizards" do not work

