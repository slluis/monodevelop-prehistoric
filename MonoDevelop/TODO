- Test the functionality of the CreateCombineDialog vs the #D on Windows
- Get code-folding working (not implemented in #d).
- Implement menu items (see MonoDevelopBrokenMenuItems.txt)
- Port dialogs (see README for HIG info)
- HtmlControl (jluke)
- Implement the remaining Option Dialogs. The framework is already ported (jba).
- After the project pad is ported, we need to write a new Docker widget thing.
  more docs later. Have to change the implementation of the docking manager.
  Currently is a rough non-docking implementation in the file
  src/Main/Base/Gui/Workbench/Layouts/DockingManager.cs, wich can be used as a
  template for a more advanced one.
  multiple places)
- Implement binding with monodoc to allow InsightWindow to work properly (jluke)
- Implement Help Scout (jluke/others)
- Tie Help Scout to monodoc (jluke)
- When too many tabs are opened they go out for the window and don't show
- printing support
- some keywords should be bold when highlighted
- make fonts choice persist (after restarting)
- organize this list (Bugzilla maybe?)
- switch to a proper build system (mbuild or auto*?)
- Allow show hidden (.*) files/directories in the file browser.
- Figure out how to print the textarea char markers in pango, as it rejectes
  the original #d ones.
- Implement ctrl+space to ask for completion
- Implement Drag and Drop support, not sure how well
	Gtk# handles this currently

---- Bugs in the File->New->File... Dialog

- It doesnt save settings like the #D one (last category/template). (Blair)
- Anything that triggers a Wizard does *not* work until the wizard is fixed.

---- Bugs in Code Completion --- There are a lot, so only the big ones for now.

- Is enabled and it shouldnt be until the file is saved so we have an extension.
- Backspace doesnt work? why? (it's catched by KeyReleaseEvent, instead of 
  Press, I don't know why we don't catch the Press event)
- Lots more...

(Read also the samples/MonoPad/TODO file for bugs related to textarea alone)
