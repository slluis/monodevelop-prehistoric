2005-03-24  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerStackTracePad.cs, Gui/DebuggerLocalsPad.cs,
	Gui/DebuggerThreadPad.cs, MonoDevelopDebugger.addin.xml: fix the
	pad ids.

2005-03-24  Chris Toshok  <toshok@ximian.com>

	* MonoDevelopDebugger.addin.xml: Change all the namespaces to
	MonoDevelop.Debugger.*

	* Gui/DebuggerVariablePad.cs
	(DebuggerVariablePad.GetDebuggerTypeProxyAttribute,
	DebuggerVariablePad.GetDebuggerDisplayAttribute): make use of
	DebugAttributeHandler.

	* Makefile.am (FILES): add DebugAttributeHandler.cs

	* DebuggerCommands.cs (DebugProject.Run): rescan debugger
	attributes when we start a debugging session.

	* DebugAttributeHandler.cs: new file, encapsulate all the debug
	attribute handling here (as much as is possible, anyway).

	* DebuggingService.cs: add attribute handler stuff, and change
	GetDebugProgressMonitor() to a property (DebugProgressMonitor).

	* *.cs, Gui/*.cs: change namespace to MonoDevelop.Debugger.*.
	
	* DebuggerASTVisitor.cs: wrap this file with #if NET_2_0.

2005-03-23  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerThreadPad.cs, Gui/DebuggerStackTracePad.cs,
	Gui/DebuggerLocalsPad.cs: Add Id and DefaultPlacement properties.

2005-03-15  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerVariablePad.cs: never commit code before trying to
	compile it.

2005-03-15  Chris Toshok  <toshok@ximian.com>

	* Makefile.am (DLLS): add ICSharpCode.SharpRefactory.dll
	(FILES): remove CSharpTokenizer.cs, CSharpExpressionParser.cs, and
	MyTextReader.cs.  Add DebuggerASTVisitor.cs

	* Gui/DebuggerVariablePad.cs
	(DebuggerVariablePad.EvaluateDebuggerDisplay): use MD's AST stuff
	instead of mdb's parser c&p here.  
	
	* CSharpTokenizer.cs, CSharpExpressionParser.jay,
	CSharpExpressionParser.cs, MyTextReader.cs: nuke.
	
	* DebuggerASTVisitor.cs: new class used to convert from MD's AST
	to trees that the debugger can evaluate.
	
	* Expression.cs: add ConditionalExpression and BoolExpression.
	
2005-03-14  Lluis Sanchez Gual <lluis@novell.com>

	* MonoDevelopDebugger.addin.xml: Use the new syntax for defining pads.

2005-03-02  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerVariablePad.cs (DebuggerVariablePad.ctor): add a
	field to the tree store so we can tell if a particular row
	expansion is for the Raw View.  Also, reorder the tree columns so
	that they're Name, Value, and Type.
	(DebuggerVariablePad.add_member): pass false for @raw_view in both
	add_class and add_struct.
	(DebuggerVariablePad.add_struct): add handling for
	DebuggerTypeProxyAttribute here.  we currently create the proxy
	object in the inferior, but I'm not sure if we should be doing
	that or create it in the debugger's address space.  Also only do
	the debugger proxy stuff if @raw_view == false.  if it's == true,
	expand as usual. When creating the Raw View row, set it's
	RAW_VIEW_COL to true.
	(DebuggerVariablePad.test_expand_row): get the value from
	RAW_VIEW_COL and pass that along to add_struct/add_class.
	(DebuggerVariablePad.GetDebuggerTypeProxyAttribute): new function.
	(DebuggerVariablePad.add_object): deal with a null ITargetObject.
	Also, use ITargetObject.PrintObject to call the object's
	ToString() method if a DebuggerDisplay attribute isn't specified
	- this doesn't work yet, as the mono debugger backend has it
	stubbed out.

2005-03-01  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerVariablePad.cs (DebuggerVariablePad.add_member):
	strip out the part of add_struct that adds individual fields and
	implement all the DebuggerBrowsableAttribute handling.
	(DebuggerVariablePad.add_struct): display both fields and
	properties.
	(DebuggerVariablePad.GetDebuggerBrowsableAttribute): returns the
	first DebuggerBrowsable attribute for a given ITargetMemberInfo,
	if there are any.
	(DebuggerVariablePad.GetDebuggerDisplayAttribute): returns the
	first DebuggerDisplay attribute for a given ITargetObject, if
	there are any.
	(DebuggerVariablePad.EvaluateDebuggerDisplay): given the
	DebuggerDisplay attribute's value, evaluate any nested
	{expressions} and convert them all to strings.
	(DebuggerVariablePad.add_object): if it's a struct or class, add
	the DebuggerDisplay if there is one.

	* DebuggingService.cs (MainThread): add a getter for this, so we
	can grab a thread with which to evaluate expressions in
	DebuggerDisplayAttributes.

	* Makefile.am (FILES): add stripped down files from the debugger
	source - EvaluationContext.cs (formerly ScriptingContext),
	Expression.cs, MyTextReader.cs, CSharpTokenizer.cs, and
	CSharpExpressionParser.cs.

2005-02-25  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerVariablePad.cs (DebuggerVariablePad.add_data): fix
	warning.
	(DebuggerVariablePad.test_expand_row): Type.Type -> TypeInfo.Type.
	(DebuggerVariablePad.add_object): same.

2005-02-25  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerVariablePad.cs: track martin's debugger changes.

2005-02-04  Chris Toshok  <toshok@ximian.com>

	* DebuggerCommands.cs: Update so this compiles/works with new MD.

	* DebuggingService.cs (DebuggingService.GetDebugProgressMonitor):
	create a progress monitor in which to display output from the
	debugged program.  not sure what to do about input, though.
	(DebuggingService.Cleanup): null current_monitor.
	(DebuggingService.thread_created): add
	TargetOutput/DebuggerOutput/DebuggerError handlers for the new
	thread, and use Gtk.ThreadNotify.
	(DebuggingService.initialized_event): same.
	(DebuggingService.thread_exited): use Gtk.ThreadNotify
	(DebuggingService.target_output, DebuggingService.debugger_output,
	DebuggingService.debugger_error): delegates for inferior output -
	output to our current_monitor.
	(DebuggingService.target_event): use Gtk.ThreadNotify.
	(DebuggingService.OnBreakpointHit): same.

2004-10-23  Chris Toshok  <toshok@ximian.com>

	* Gui/DebuggerThreadPad.cs: add the current location to stopped
	threads.

	* DebuggingService.cs: add thread (process) events and generate
	thread state change events so the threadpad will update properly.

2004-10-22  Chris Toshok  <toshok@ximian.com>

	* Makefile.am (FILES): add Gui/DebuggerThreadPad.cs

	* MonoDevelopDebugger.addin.xml: add the threadpad xml.

	* Gui/DebuggerThreadPad.cs: new pad, displaying a (for now very
	unreactive) thread list.

2004-10-22  Chris Toshok  <toshok@ximian.com>

	* MonoDevelopDebugger.addin.xml: add DebuggerStackTracePad to the
	views.

	* Gui/DebuggerStackTracePad.cs: new file.

	* Makefile.am (FILES): add DebuggerStackTracePad.cs

2004-10-21  Chris Toshok  <toshok@ximian.com>

	* DebuggingService.cs: return String.Empty from CurrentFilename if
	the frame's SourceAddress is null.  Likewise, return -1 from
	CurrentLineNumber in this case.

2004-06-25  Todd Berman  <tberman@off.net>

	* DebuggingService.cs: sync with cvs debugger.

2004-06-18  Todd Berman  <tberman@off.net>

	* Makefile.am: use pkg-config properly.

2004-06-12  Martin Baulig  <martin@ximian.com>

	* Makefile.am: enable the debugger again.
	* DebuggingService.cs: Make it work wit the latest debugger from CVS.

2004-04-29  Todd Berman  <tberman@sevenl.net>

	* Makefile.am: dont build debugger for now. will add info in configure
	soon
	* DebuggingService.cs: bring up to speed with debugger from cvs.

2004-04-04  Todd Berman  <tberman@sevenl.net>

	* Makefile.am: change to .addin.xml for i18n
	* MonoDevelopDebugger.addin.xml: mv
	* MonoDevelopDebugger.addin: rm

2004-03-29  Todd Berman  <tberman@sevenl.net>

	* Gui/DebuggerVariablePad.cs: use AmbienceService to convert from
	System.Int32 to int, etc.

2004-03-24  John Luke  <jluke@cfl.rr.com>

	* Makefile.am: addin was not being cp'd to build/AddIns/.

2004-03-22  John Luke  <jluke@cfl.rr.com>

	* Makefile.am: move FILES and EXTRA_DIST outside of if block

