2005-07-13  Lluis Sanchez Gual  <lluis@novell.com> 

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs:
	* Gui/Workbench/DefaultWorkbench.cs:
	* Commands/AutostartCommands.cs: Don't abuse ShowAll().
	
	* Gui/Dialogs/NewProjectDialog.cs: Use a default icon for the template
	if none is provided.
	
	* Gui/Dialogs/CombineOptionsDialog.cs:
	* Gui/Dialogs/ProjectOptionsDialog.cs: IConfiguration can't be renamed
	anymore, so to change the name, a copy has to be made.
	
	* Gui/Pads/SolutionPad/TreeViewPad.cs: ExpandToNode should not expand
	the current node, only the parents.
	
	* Gui/Pads/SolutionPad/NodeState.cs: Save/restore the selected node in the
	node state tree.
	
	* Gui/Pads/HelpBrowser/HelpViewer.cs:
	* Gui/Pads/HelpBrowser/MonodocTreePad.cs:
	* Gui/Pads/DefaultMonitorPad.cs:
	* Gui/Pads/TerminalPad.cs:
	* Gui/Pads/OpenTaskView.cs: The responsibility of showing the widgets of
	a pad is for the pad. The workbench won't ShowAll any more.
	
	* Gui/ToolWidgets/ConfigurationComboBox.cs: Update the combo when
	configurations are added or removed.
	
	* Internal/Project/Project/IConfiguration.cs: Don't allow renaming of
	configurations.
	
	* Internal/Project/Project/AbstractConfiguration.cs: Make Clone work
	for classes with no default constructor.
	
	* Internal/Project/Combine/Combine.cs: Ignore the
	ActiveConfigurationChanged event while deserializing.
	
	* Internal/Project/Combine/ConfigurationCollection.cs:
	* Internal/Project/Combine/CombineEntry.cs: Added ConfigurationAdded
	and ConfigurationRemoved events.
	
	* Internal/Templates/ProjectTemplates/ICombineEntryDescriptor.cs:
	* Internal/Templates/ProjectTemplates/CombineEntryDescriptor.cs:
	* Internal/Templates/ProjectTemplates/CombineDescriptor.cs: 
	* Internal/Templates/ProjectTemplates/ProjectTemplate.cs:
	* Internal/Templates/ProjectTemplates/ProjectDescriptor.cs:
	Added template support for generic CombineEntry subclasses, which don't
	need to be Projects.

2005-07-11  Lluis Sanchez Gual  <lluis@novell.com> 

	* Services/File/IFileService.cs: 
	* Services/File/DefaultFileService.cs: Added OpenFile overload to open
	a file at place the cursor at a given line at column.
	
	* Services/ProcessService/ProcessService.cs: Provide the assembly location
	when creating an out of process object.
	
	* Services/Project/ProjectService.cs: Use the new combine options dialog.
	Store and restore the active configuration of the root combine.
	
	* Gui/Dialogs/CombineConfiguration/CombineConfigurationPanel.cs:
	Implemented.
	* Gui/Dialogs/CombineConfiguration/CombineEntryConfigurationsPanel.cs:
	new option panel that shows the list of configurations of a combine.
	
	* Gui/Dialogs/TreeViewOptions.cs: Added new overridable methods to
	make costumization easier.
	* Gui/Dialogs/CombineOptionsDialog.cs: New dialog that shows the options
	for a combine.
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Include the IPadContent
	in the command route.
	* Gui/Pads/SolutionPad/TreeViewPad.cs: Use the new ICommandDelegatorRouter
	interface. Made some methods virtual. The key for GetComposedIcon is now
	an object, instead of an string.
	
	* Gui/Pads/SolutionPad/ITreeBuilderContext.cs:The key for GetComposedIcon
	is now an object, instead of an string.
	
	* Gui/ToolWidgets/ConfigurationComboBox.cs: Toolbar widget that shows
	the active configuration.
	
	* Base.glade: Added new combine configuration dialogs.
	* MonoDevelopCore.addin.xml: Added the ConfigurationSelector command and
	the new combine configuration panels.

2005-07-11  Lluis Sanchez Gual  <lluis@novell.com>

	* Internal/Codons/Commands/CommandCodon.cs: Set the text and description
	for custom commands.
	* Internal/Codons/LanguageBinding/ILanguageBinding.cs:
	CreateCompilationParameters now returns an ICloneable.
	
	* Internal/Project/IConfiguration.cs: Added CopyFrom method.
	* Internal/Project/AbstractConfiguration.cs:
	* Internal/Project/AbstractProjectConfiguration.cs
	* Internal/Project/DotNetProjectConfiguration.cs: Implement CopyFrom.
	
	* Internal/Combine/Combine.cs: Added CreateConfiguration method.
	When the active configuration is changed, propagate the change to all
	children entries. When building a combine, build the child entries which
	have the build flag in the active configuration.
	* Internal/Project/DotNetProject.cs: CreateConfiguration is now defined
	in CombineEntry.
	* Internal/Combine/CombineEntry.cs: Make it extensible by implementing
	IExtendedDataItem. Use the new ConfigurationCollection collection.
	Added CreateConfiguration abtract method. Added ActiveConfigurationChanged
	event. Moved CombineEntryCollection to its own file.
	* Internal/Combine/ConfigurationCollection.cs: New class.
	* Internal/Combine/CombineConfiguration.cs: Renamed the Config class to
	CombineConfigurationEntry and made it public. Implemented CopyFrom.
	* Internal/Combine/ConfigurationEventHandler.cs: New handler.
	* Internal/Combine/CombineEntryCollection.cs: Moved from CombineEntry.cs.
	
	* Internal/Serialization/ClassDataType.cs: Properties dynamically added
	to a class must also be added to its subclasses.
	* Internal/Serialization/ItemProperty.cs: Avoid crash in HasSetter for
	properties not linked to a member (extended properties).

2005-07-11  Lluis Sanchez Gual  <lluis@novell.com> 

	* Services/ParserService/AssemblyCodeCompletionDatabase.cs:
	Load referenced assemblies in an external process. gtk# 1.0 projects
	should work again.
	* Services/ParserService/IParserService.cs:
	* Services/ParserService/DefaultParserService.cs: Added GetProjectContents
	method.
	* Services/ParserService/CodeCompletionDatabase.cs: Added GetClassList
	method (to support GetProjectContents).

2005-07-08  John Luke  <john.luke@gmail.com>

	* Makefile.am: remove MONO_POSIX_OEE defines
	* Internal/Project/Combine/Combine.cs: just use Mono.Unix now
	
2005-07-01  Joshua Tauberer  <tauberer@for.net>

	* Internal/Project/Project/Project.cs: Pre/Post build tasks
	set up the ProcessStartInfo through the same function, set
	the working directory to the project base path.

2005-07-01  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Services/Tasks/Task.cs:
	* Gui/Pads/OpenTaskView.cs:
	* Gui/Pads/ClassPad/ClassNodeBuilder.cs:
	* Gui/Pads/ClassPad/MemberNodeCommandHandler.cs:
	* Gui/Search/SearchResult/DefaultSearchResult.cs:
	Make lines and columns 1-based.

2005-06-30  John Luke  <john.luke@gmail.com>

	* Services/ParserService/AssembyInformation.cs: fix possible nullref
	patch from shoehn@web.de (Sebastian)
	fixes bug #75418

2005-06-28  Raja R Harinath  <rharinath@novell.com>

	* Makefile.am (FILES): Move AssemblyInfo.cs ...
	(GENERATED_FILES): ... here.

2005-06-27  Lluis Sanchez Gual  <lluis@novell.com> 

	* Services/ParserService/DefaultParserService.cs: Don't get the current
	file text if we are not going to be able to parse it.
	* Gui/Search/*.cs: Moved here search/replace stuff from the editor addin.
	* Gui/ContentInterfaces.cs: 
	* Base.glade: Added search/replace dialogs.
	* Makefile.am: Added new files.
	* MonoDevelopCore.addin.xml: Registered search/replace commands.
	
2005-06-15  John Luke  <john.luke@gmail.com>

	* Services/File/RecentFiles.cs: catch exception when writing to
	~/.recently-used, fixes bug #75305

2005-06-15  John Luke  <john.luke@gmail.com>

	* MonoDevelopCore.addin.xml: add EditCommands.Rename to F2
	shortcut, fixes bug# 73774

2005-06-15  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/ReferenceDialog/AssemblyReferencePanel.cs:
	start at $HOME dir
	filter on *.exe and *.dll

2005-06-15  John Luke  <john.luke@gmail.com>

	* Base.glade (AddReferenceDialog):
	change title to Edit References to match menu
	put the selected references section in an expander
	
2005-06-15  John Luke  <john.luke@gmail.com>

	* Services/Project/ProjectService.cs: don't recreate SelectReferenceDialog
	every time, just set the project instead
	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs: allow it to be
	reused and just change the project to show the correct info
	* Gui/Dialogs/ReferenceDialog/ProjectReferencePanel.cs: add a SetProject
	that updates the info appropriately, remove old code
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs: add Reset method
	to update the info for a new project
	
2005-06-10  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs: Make sure
	that projects are correctly marked as selected.

2005-06-09  Lluis Sanchez Gual  <lluis@novell.com> 

	* Commands/AutostartCommands.cs: Use IWorkbench.CreateMemento to create
	the default memento.
	* Gui/Workbench/WorkbenchMemento.cs:
	* Gui/Workbench/DefaultWorkbench.cs:
	* Gui/IWorkbenchLayout.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Use dockable toolbars.
	Load/Save the toolbar layout when starting/exiting. Added support for
	IMementoCapable to IWorkbenchLayout.
	
	* Gui/CommandService.cs: Added CommandManager property.
	
	* Internal/Codons/Commands/CommandCodon.cs: Make sure that configuration
	commands defined by the command system can be found.
	
	* MonoDevelopCore.addin.xml: Added names to the toolbars. Added the
	ToolbarList command.

2005-06-07  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Core/src/MonoDevelop.Base/Internal/Project/Project/Project.cs:
	* Core/src/MonoDevelop.Base/Internal/Project/Combine/CombineEntry.cs:
	When a project is renamed make sure that references to it are updated.

2005-06-04  John Luke  <john.luke@gmail.com>

	* MonoDevelopCore.addin.xml: remove workaround
	for Shift|F8 as the dock handles it now

2005-06-03  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Internal/Project/Combine/Combine.cs: Remove references
	to a project when it is removed from a combine (57782)

2005-06-02  John Luke  <john.luke@gmail.com>

	* MonoDevelopCore.addin.xml: add Shift|F8 shortcut
	for tip of the day from Øyvind Neuman (spam@agurk.com)
	workaround for bug 61113

2005-06-02  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs:
	check GetIterFirst return value to avoid gtk+ assertions
	might fix bug 74445

2005-06-02  Lluis Sanchez Gual  <lluis@novell.com> 

	* Gui/Pads/SolutionPad/TreeViewPad.cs: Fix warning.
	* Internal/Project/Combine/CombineEntry.cs: Added ParentCombine property.

2005-06-01  John Luke  <john.luke@gmail.com>

	* Core/src/MonoDevelop.Base/Services/ResourceService.cs: remove
	DllImport workaround for rendering an icon
	* Core/src/MonoDevelop.Base/MonoDevelop.Base.dll.config.in: remove
	as we no longer p/invoke
	* Core/src/MonoDevelop.Base/Makefile.am: updated for above
	
2005-06-01  John Luke  <john.luke@gmail.com>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs:
	* Gui/Pads/FileScout/FileListItem.cs: adjust to
	FileIconLoader changes
	
2005-06-01  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Services/MessageService.cs: Added methods to ask a question
	with a cancel option.
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Added a cancel
	option when trying to close a modified file.

2005-06-01  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs:
	* Gui/Dialogs/ReferenceDialog/ProjectReferencePanel.cs:
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs:
	Prevent a project from referencing itself.

2005-05-30  Lluis Sanchez Gual  <lluis@novell.com> 

	* Services/StatusBar/DefaultStatusBarService.cs: Added null checks.
	* Services/MessageService.cs: Use a more convenient dialog for
	displaying errors.
	* Gui/Dialogs/ErrorDialog.cs: New error dialog.
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Added null checks.
	
	* Base.glade:
	* Gui/Pads/SolutionPad/NodeCommandHandler.cs:
	* Gui/Pads/SolutionPad/TreeViewPad.cs: Notify node command handlers
	when a node is selected.
	
	* Gui/CommandService.cs: Use the Runtime.MessageService api to show
	errors in command execution.
	* Makefile.am: Added ErrorDialog.cs.

2005-05-26  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/OptionPanels/ProjectOptions/CompileFileProjectOptions.cs:
	don't forget to save the list file in the files to compile list,
	remove some unneccessary code, fixes bug 75043
	
2005-05-19  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Gui/Dialogs/WordCountDialog.cs: Fixed problem that numbers were not shown till moused over.

2005-05-17  Jacob Ilsø Christensen  <jacobilsoe@gmail.com>

	* Gui/IWorkbenchLayout.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	Added methods to go to next/previous tab page.

2005-05-15  Lluis Sanchez Gual  <lluis@novell.com> 

	* Services/File/DefaultFileService.cs: Make the service GUI thread safe.
	* Gui/Dialogs/ReferenceDialog: Cleaned up the dialog.
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Added IntPtr constructor
	to make gtk# happy.
	* Gui/Pads/DefaultMonitorPad.cs: Don't indent when a task has a null name.
	* Base.glade: Many fixes to make the dialogs more conforming to the HIG.
	* Internal/Project/Project/DotNetProjectConfiguration.cs: Added
	SourceDirectory property.
	* Internal/Project/Project/DotNetProject.cs: Set the sources path before
	building.
	* Internal/Project/Project/Project.cs: In CopyReferencesToOutputPath, copy
	refereces of referenced projects. They are not needed for compiling, but
	they are for running. The Build method now also builds required references.

2005-05-09 Jacob Ilsø Christensen  <jacobilsoe@gmail.com>
 
 	* Gui/Pads/OpenTaskView.cs: Fixed Gtk warnings by using Clipboard.Text

2005-05-08  John Luke  <john.luke@gmail.com>

	* /Gui/Pads/SolutionPad/TreeViewPad.cs: use DefaultSortFunc property
	
2005-05-03  Lluis Sanchez Gual  <lluis@novell.com> 

	* Commands/ProjectCommands.cs: The Build command should compile the
	current file before running.
	
	* Services/Tasks/TaskService.cs:
	* Gui/Workbench/DefaultWorkbench.cs:
	* Gui/Pads/SolutionPad/TreeViewPad.cs:
	* Gui/Pads/OpenTaskView.cs:
	* Gui/Pads/TerminalPad.cs:
	* Gui/Pads/DefaultMonitorPad.cs:
	* Gui/Pads/FileScout/FileScout.cs:
	* Gui/AbstractPadContent.cs:
	* Gui/IWorkbench.cs:
	* Gui/IPadContent.cs:
	Removed BringToFront from IPadContent, and moved to IWorkbench.
	
	* Services/SystemAssemblyService.cs: Lazy load system assembly
	information. This speeds up MD startup time.
	
	* Services/ProcessService/ProcessService.cs:
	* Services/ProcessService/IProcessHost.cs:
	* Services/ProcessService/IProcessHostController.cs:
	* Services/ProcessService/ProcessHostController.cs:
	* Services/ProcessService/RemoteProcessObject.cs:
	* Makefile.am:
	Added new api for creating out-of-process objects.
	
	* Gui/Pads/FileScout/FileList.cs: Fix warnings.
	
	* Internal/Project/Project/DotNetProjectBinding.cs: Set the correct
	paths for single file projects.

2005-04-30  Lluis Sanchez Gual  <lluis@novell.com> 

	* Commands/ProjectCommands.cs: Added new build and run commands.
	* Services/DebuggerService/IDebuggerService.cs: Added some methods.
	* Services/Project/ProjectService.cs: Allow building a project even
	if there isn't an open combine.
	* Gui/Workbench/DefaultWorkbench.cs: Gui safe subscription to debugger
	events.
	* Makefile.am: added DebugCommands.
	* MonoDevelopCore.addin.xml: Added some missing descriptions. Registered
	new project and debug commands.

2005-04-27  Lluis Sanchez Gual  <lluis@novell.com> 

	* Commands/ViewCommands.cs: Use markup for the view list menu.
	* Commands/ProjectCommands.cs: Implemented Debug Application command.
	* Services/File/DefaultFileService.cs: In OpenFile, don't create a
	progress monitor if the file is already open.
	* Services/DebuggerService/IDebuggerService.cs: Added events that notify
	when breakpoints are added/removed. Added methods for getting the
	active breakpoints.
	
	* MonoDevelopCore.addin.xml:
	* Services/Project/IProjectService.cs:
	* Services/Project/ProjectService.cs:
	Added DebugApplication method. In the Debug methods, make sure the
	context switch is done in the gui thread.
	
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Don't use ShowItem() to
	show a hidden pad, since it is not working properly.
	
	* Gui/Workbench/DefaultWorkbench.cs: Removed most of code related to
	debugging, since it is handled by the editor itself.
	
	* Makefile.am: Added some new files.

2005-04-27  Lluis Sanchez Gual  <lluis@novell.com>

	* Makefile.am
	* Services/DebuggerService/IDebuggerService.cs:
	Moved IDebuggerService.cs to its own directory.

2005-04-25  Lluis Sanchez Gual  <lluis@novell.com>

	* Commands/MenuItemBuilders.cs: Removed. Menu builders are now
	implemented as command arrays and handled in the following files.
	* Commands/RunCommands.cs: Removed. Moved to ProjectCommands.
	* Commands/EditCommands.cs: Most of code moved to 
	MonoDevelop.Gui.ViewCommandHandlers.
	
	* Commands/ClassBrowserCommands/ClassBrowserCommands.cs
	* ProjectBrowserCommands/*:
	Removed. Handlers for tree commands are handled by NodeCommandHandler
	objects.
	
	* Commands/FileCommands.cs:
	* ProjectCommands.cs:
	* WindowCommands.cs:
	* HelpCommands.cs:
	* ViewCommands.cs:
	Added enums with IDs for the commands.
	Use the new CommandHandler base class for global commands.
	Removed commands that are not global.
	
	* Gui/ViewCommandHandlers.cs: Implements edit commands for workspace
	windows.
	
	* Services/File/IFileService.cs:
	* Services/File/DefaultFileService.cs: Moved here the code that shows
	the UI for saving files.
	
	* Services/IDebuggerService.cs: The Run method now takes a progress
	monitor, and will (should) stop if the monitor notifies a cancel request.
	
	* Services/Project/IProjectService.cs:
	* Services/Project/ProjectService.cs:
	Factorized the Build* methods into a single Build method which takes
	as parameter what you want to build. The same for Execute* methods.
	Moved here several operations previously implemeted in commands, to
	make it easier to reuse code. This includes: Debug(), Deploy(),
	ShowOptions(), CreateProject(), CreateCombine(),
	AddCombineEntry(), CreateProjectFile(), AddReferenceToProject().
	
	* Gui/Dialogs/NewFileDialog.cs:
	* Gui/Dialogs/NewProjectDialog.cs: Added Run method to show the window
	as a modal dialog.
	
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/IWorkbench.cs:
	* Gui/Dialogs/TreeViewOptions.cs: Removed old menu code.
	
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Removed obsolete code.
	Plug the handler class for generic Edit commands into the window.
	
	* Gui/Workbench/DefaultWorkbench.cs: Use the new command service.
	
	* Gui/Components/SdMenu.cs: Moved here the ISubmenuItem interface, 
	which was implemented in MenuItemBuilders.cs.
	
	* Gui/Pads/SolutionPad/NodeCommandHandler.cs:
	* Gui/Pads/SolutionPad/TreeViewPad.cs: Plug node command handlers into
	the new command system.

	* Gui/Pads/SolutionPad/NodeBuilder.cs: Don't reuse command handlers
	since they may store command state information.
	* Gui/Pads/SolutionPad/SolutionPad.cs: Made OnOpenCombine and
	OnCloseCombine virtual.
	* Gui/Pads/ProjectPad/ProjectSolutionPad.cs: Subclass of SolutionPad
	which keeps track of the current selected project.
	
	* Gui/Pads/ProjectPad/*:
	Moved here the handlers for commands previously implemented in
	MonoDevelop.Commands.
	
	* Gui/CommandService.cs:
	* Gui/GuiService.cs: Added the new command service.
	
	* Internal/Codons/Pads/SolutionPadCodon.cs: Subclasses of SolutionPad
	can now be specified in the "class" attribute.
	
	* Internal/Project/Project/DotNetProject.cs: Made the Debug method
	synchronous.
	
	* Internal/Conditions/WorkbenchContextCondition.cs: Set the correct
	class name.
	
	* Internal/Codons/Commands/*: Codons for the new command infrastructure.
	
	* MonoDevelopCore.addin.xml: Defined the new menu and toolbar
	structure.

2005-04-25	John Luke	<john.luke@gmail.com>

	* Gui/Dialogs/NewProjectDialog.cs
	* Gui/Dialogs/NewFileDialog.cs: disambiguate IconView
	in gtk# head, based on patch by Fredrik Nilsson <jymdman@home.se>

2005-04-19  Ben Motmans <ben.motmans@gmail.com>

	* Gui/Pads/DefaultMonitorPad.cs
	* Services/StatusBar/DefaultStatusBarService.cs:
	Clear the output when a combine closes.
	* GUI/Pads/OpenTaskView.cs
	Reorder of some columns for better view on small resolutions.

2005-04-17	John Luke	<john.luke@gmail.com>

	* Makefile.am: fix distcheck

2005-04-17	John Luke	<john.luke@gmail.com>

	* Gui/Pads/SolutionPad/TreeViewPad.cs: use new AppendNode
	and SetDefaultSortFunc API

2005-04-14  Lluis Sanchez Gual  <lluis@novell.com>

	* Internal/ProgressMonitoring/BaseProgressMonitor.cs: Don't crash
	when reporting an error with a null exception.

2005-04-10	John Luke	<john.luke@gmail.com>

	* Internal/Project/Project/AbstractProjectConfiguration.cs:
	set RunWithWarnings = true by default, because newer compiler
	versions may add warnings, etc.
	* options/MonoDevelopProperties.xml: remove a bunch of old SharpDevelop
	prefs and add some defaults for what we use

2005-04-09	Christian Hergert	<christian.hergert@gmail.com>

	* Services/DefaultLoggingService.cs: Fix the log4net error by
	checking for the .config before configuring.

2005-04-08	Christian Hergert	<christian.hergert@gmail.com>

	* Services/DefaultLoggingService.cs: Add missing event firing for Error
	method. Attempt to fix the constructor to be more like  log4net examples.

2005-04-07  Lluis Sanchez Gual  <lluis@novell.com>

	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs: Implemented
	IncludeFileToProject command.
	* Commands/ProjectBrowserCommands/GeneralNodeCommands.cs:
	New copy/cut/paste commands for tree nodes.
	* Services/File/DefaultFileService.cs:
	IFileService.cs: Use a progress monitor when opening files. OpenFile now
	return an IAsyncOperation object that can be used to track the status
	of the operation. Added methods for copying and moving files.
	* Services/DispatchService/DispatchService.cs: Dispatch all pending
	messages at once in the GUI thread. It gives better performance.
	* Services/Tasks/Task.cs: Track changes in IFileService.
	
	* Services/Project/IProjectService.cs:
	* Services/Project/ProjectService.cs: Implemented method for copying
	files between projects.
	
	* Gui/Pads/SolutionPad/TreeViewPad.cs: Implemented support for
	drag&drop and copy/paste. Some other internal improvements.
	* Gui/Pads/SolutionPad/ITreeNavigator.cs,
	* Gui/Pads/SolutionPad/TypeNodeBuilder.cs: Some API adjustments.
	* Gui/Pads/SolutionPad/NodeState.cs: New class that can store the
	status of a tree.
	
	* Gui/Pads/ProjectPad/ProjectFolder.cs:
	* Gui/Pads/ProjectPad/ProjectNodeBuilder.cs:
	* Gui/Pads/ProjectPad/ProjectFolderNodeBuilder.cs:
	* Gui/Pads/ProjectPad/ProjectFileNodeBuilder.cs:
	* Gui/Pads/ProjectPad/FolderNodeBuilder.cs:
	* MonoDevelopCore.addin.xml:
	Implemented support for drag&drop of files and folders. Moved all code
	that handles the ShowAllFiles option to its own node builder extension.
	
	* Gui/Pads/ProjectPad/SystemFile.cs:
	* Gui/Pads/ProjectPad/ShowAllFilesBuilderExtension.cs:
	* Gui/Pads/ProjectPad/SystemFileNodeBuilder.cs:
	New classes that implement the ShowAllFiles option.
	
	* Gui/Pads/ProjectPad/CombineNodeBuilder.cs:
	* Gui/Pads/ProjectPad/ProjectReferenceNodeBuilder.cs:
	* Gui/Pads/ProjectPad/ResourceFolderNodeBuilder.cs:
	* Gui/Pads/ProjectPad/ProjectReferenceFolderNodeBuilder.cs:
	* Gui/Pads/ClassPad/ClassNodeBuilder.cs:
	* Gui/Pads/ClassPad/ProjectNodeBuilder.cs:
	* Gui/Pads/ClassPad/MemberNodeBuilder.cs:
	* Gui/Pads/ClassPad/CombineNodeBuilder.cs:
	* Gui/Pads/ClassPad/NamespaceNodeBuilder.cs:
	* Gui/Pads/ClassPad/MemberNodeCommandHandler.cs:
	* Gui/Pads/ClassPad/EventNodeBuilder.cs: Track api changes.
	
	* Gui/Pads/ProjectPad/ResourceFolder.cs: Implemented Equals().
	
	* Internal/Project/Project/Project.cs: Set the project as dirty when its
	files change.
	
	* Internal/Project/Project/Collections/ProjectFileCollection.cs: new
	method for getting all files in a path.
	
	* Commands/MenuItemBuilders.cs: Removed debug code.

2005-04-06  Chris Toshok  <toshok@ximian.com>

	* Services/IDebuggerService.cs: remove the CurrentFrame property,
	as it's only used by the stuff inside the DebuggerAddIn anyway,
	and the object typed property was bogus.

2005-05-04	John Luke	<john.luke@gmail.com>

	* Internal/Conditions/WorkbenchContextCondition.cs:
	use Id so we can see the debugger menu again, it was
	comparing the wrong thing

2005-04-01	Christian Hergert	<christian.hergert@gmail.com>

	* Commands/FileCommands.cs: Add Andrew's patch to ask if we want to
	overwrite an existing file before actually doing it.

2005-04-01	Christian Hergert	<christian.hergert@gmail.com>

	* Services/ILoggingService.cs: Update the LogAppendedArgs and remove the
	category.
	* Services/DefaultLoggingService.cs: Remove the need for the StackTrace.
	We dont really need that in depth of information currently. Will look to
	find this feature directly in log4net and update soon.

2005-04-01	Christian Hergert	<christian.hergert@gmail.com>

	* Commands/VBConverter/ConvertBuffer.cs: Convert to use new Logging
	framework.
	* Commands/MenuItemBuilders.cs
	* Commands/AutostartCommands.cs
	* Services/DefaultLoggingService.cs
	* Services/DispatchService/DispatchService.cs
	* Services/ILoggingService.cs: New logging service to help make debugging
	and information logging easy.
	* Services/Runtime.cs: Add logging service to Runtime.
	* Services/DisplayBinding/DisplayBindingService.cs: Convert to new Logging
	framework.
	* Services/ResourceService.cs
	* Services/ParserService/DefaultParserService.cs
	* Services/ParserService/AssemblyInformation.cs
	* Services/ParserService/AssemblyCodeCompletionDatabase.cs
	* Services/ParserService/CodeCompletionDatabase.cs
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs
	* Gui/Workbench/DefaultWorkbench.cs
	* Gui/Dialogs/Wizard/WizardDialog.cs
	* Gui/Dialogs/Wizard/AbstractWizardPanel.cs
	* Gui/Dialogs/WordCountDialog.cs
	* Gui/Dialogs/NewFileDialog.cs
	* Gui/Dialogs/ReferenceDialog/AssemblyReferencePanel.cs
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs
	* Gui/Pads/SolutionPad/TreeViewPad.cs
	* Gui/Pads/PropertyPad/PropertyPad.cs
	* Gui/Pads/ProjectBrowser/BrowserNode/ProjectBrowserNode.cs
	* Gui/Pads/ProjectBrowser/BrowserNode/DirectoryNode.cs
	* Gui/Pads/ProjectBrowser/NodeBuilder/DefaultDotNetNodeBuilder.cs
	* Gui/Pads/HelpBrowser/MonodocTreePad.cs
	* Gui/Pads/HelpBrowser/HelpViewer.cs
	* Gui/Pads/FileScout/FileList.cs
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs
	* Gui/HtmlControl/HtmlControl.cs
	* Gui/HtmlControl/MozillaControl.cs
	* Makefile.am: Add new LoggingService files to build files
	* Internal/ExternalTool/ToolLoader.cs: Update to new Logging Service
	framework.
	* Internal/Project/Project/DotNetProject.cs
	* Internal/Project/Project/IncludeFilesDialog.cs
	* Internal/Project/Project/Project.cs
	* Internal/Project/Combine/Combine.cs
	* Internal/ProgressMonitoring/ConsoleProgressMonitor.cs
	* Internal/ProgressMonitoring/BaseProgressMonitor.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyParameter.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyMethod.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyReturnType.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyEvent.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyAttribute.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyField.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyProperty.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyClass.cs
	* Internal/Templates/CodeTemplateLoader.cs

2005-03-31  Christian Hergert  <christian.hergert@gmail.com>

	* MonoDevelopCore.addin.xml: Use proper stock icon names for
	solution and class pads.

2005-03-22  John Luke  <john.luke@gmail.com>

	* Internal/Project/Project/DotNetProject.cs: Release configuration
	should not enable debugmode
	* Internal/Project/Combine/CombineConfiguration.cs: no need to have
	configurationname on the Entry node, build=true by default

2005-03-20  Todd Berman  <tberman@off.net>

	* Gui/Pads/FileScout/FileScout.cs: dispatch to the gui thread.

2005-03-19	Christian Hergert	<christian.hergert@gmail.com>

	* /Gui/Pads/FileScout/FileScout.cs: Change directories in the FileScout
	to the base directory of a opened combine. Return to home directory
	upon close of the combine.

2005-03-19  Lluis Sanchez Gual  <lluis@novell.com>

	* Commands/MenuItemBuilders.cs: Fixed Include/Compile and Deploy options.
	* Commands/ProjectOptionsCommands.cs:
	* Commands/ClassBrowserCommands/ClassBrowserCommands.cs:
	* Internal/CollectionUtilities/Comparers.cs:
	Removed reference to old project pad.
	* Commands/ProjectBrowserCommands/ProjectNodeCommands.cs: 
	* Gui/Dialogs/CombineConfiguration/CombineStartupPanel.cs:
	Use new StartupEntry property instead of SingleStartProjectName.
	* Gui/Pads/ProjectPad/ProjectFileNodeBuilder.cs: Use the correct
	menu path.
	* Makefile.am: Removed old solution pads.
	* Internal/Project/Combine/Combine.cs: Added StartupEntry property
	which replaces SingleStartProjectName. Storing the name made project
	renaming complex to handle.
	* Internal/Project/Combine/CombineExecuteDefinition.cs:
	* Internal/Project/Combine/CombineConfiguration.cs: Serialize the
	real entry name, which may have changed.

2005-03-19  Lluis Sanchez Gual <lluis@novell.com>

	* Commands/MenuItemBuilders.cs: Removed wrong check.
	* Gui/Pads/SolutionPad/NodeBuilder.cs: Removed unused method.

2005-03-15  John Luke  <john.luke@gmail.com>

	* Gui/Workbench/Layout/SdiWorkspaceLayout.cs: add NoGrip flags
	to the documents section to match new dock API

2005-03-15  Lluis Sanchez Gual <lluis@novell.com>

	* Pads/SolutionPad/TreeViewPad.cs: implemented ITreeBuilder.UpdateAll()
	  method in TreeBuilder.
	* Pads/SolutionPad/ITreeBuilder.cs: Added UpdateAll method and some
	  documentation.
	* Pads/ProjectPad/ProjectNodeBuilder.cs: Don't remove files from the
	  tree if ShowAllFiles option is set.
	* Pads/ProjectPad/ProjectFileNodeBuilder.cs: Removed unused class.
	* Pads/ProjectPad/FolderNodeBuilder.cs: When adding a file, don't
	  duplicate nodes if ShowAllFiles option is set.
	* Internal/Project/Project/Collections/ProjectFileCollection.cs:
	  When removing a file, unset the ProjectFile's project. Removed 
	  indexer setter. Nobody uses it and it adds complexity.

2005-03-14  Lluis Sanchez Gual <lluis@novell.com>

	* Commands/MenuItemBuilders.cs
	* Gui/Components/SdMenuCheckBox.cs
	* Gui/Components/SdMenuCommand.cs:
	  Avoid subscribing self events since it can be a source of memory leaks.
	
	* Commands/ProjectBrowserCommands/ResourceFolderNodeCommands.cs,
	  Commands/ProjectBrowserCommands/ProjectNodeCommands.cs,
	  Commands/ProjectBrowserCommands/ReferenceFolderNodeCommands.cs,
	  Commands/ProjectBrowserCommands/FolderNodeCommands.cs,
	  Commands/ProjectBrowserCommands/CombineNodeCommands.cs,
	  Commands/ProjectBrowserCommands/GeneralNodeCommands.cs:
	  Modified to use the new tree navigation api.
	  
	* Services/Project/ProjectService.cs: call RestoreCombinePreferences
	  in the gui thread.
	* IconService.cs: Added helper method for changing the alpha of a pixbuf.
	* PadContentCollection.cs: Pads now have an Id. Use it.
	* SelectReferenceDialog.cs: Use a ProjectReferenceCollection instead
	  of an array list to return the results.
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Name dock items after
	  pad's ids. Read the list of pads for the context from the addin xm
	  file. Use the new IPadContent.DefaultPlacement property to put pads
	  in the right place.
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Properly dispose the
	  window.
	* Gui/Workbench/DefaultWorkbench.cs: Read pads declarations from the
	  new addin tree path, and using the new codons.
	* Gui/AbstractPadContent.cs: Added Id and DefaultPlacement properties.
	
	* Gui/Pads/SolutionPad/*: The new generic solution pad.
	* Gui/Pads/ClassPad/*: Node builders for the new class pad.
	* Gui/Pads/ProjectPad/*: Node builders for the new project pad.
	
	* Gui/Pads/ClassScout/ClassScout.cs:
	* Gui/Pads/OpenTaskView.cs:
	* Gui/Pads/TerminalPad.cs:
	* Gui/Pads/DefaultMonitorPad.cs:
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs:
	* Gui/Pads/FileScout/FileScout.cs:
	  Track API changes.
	  
	* Gui/IWorkbench.cs: WorkbenchContext is now a class instad of an
	  enum. New context can be dynamically created.
	* Gui/IPadContent.cs: Added Id and DefaultPlacement properties.
	* options/DefaultEditingLayout.xml: Use new pad Ids.
	
	* Internal/Codons/ContextPadCodon.cs: New codon for defining pads
	  in a workbench context.
	* Internal/Codons/Pads/NodeBuilderCodon.cs: New codon for defining
	  node builders.
	* Internal/Codons/Pads/PadOptionCodon.cs: New codon for defining
	  pad options.
	* Internal/Codons/Pads/SolutionPadCodon.cs: New codon for defining
	  solution pads.
	* Internal/Codons/Pads/PadCodon.cs: New codon for defining
	  pads.
	* Internal/Codons/WorkbenchContextCodon.cs: New codon for defining
	  workbench contexts.
	  
	* Internal/Project/Project/ProjectReference.cs: Implemented Equals().
	* Internal/Project/Project/IncludeFilesDialog.cs: Doesn't need to be modal.
	* Internal/Project/Project/Project.cs: Enable include files dialog.
	* Internal/Project/Combine/Combine.cs: Fixed some wrong events.
	
	* MonoDevelopCore.addin.xml: Use the new codons for defining pads and
	  contexts.

2005-03-13  Todd Berman  <tberman@off.net>

	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Don't use a dock, this
	is insane, and it always was.

2005-03-12  John Luke  <john.luke@gmail.com>

	* Makefile.am: use MonoDevelop.Dock.dll
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	minor API changes for C# version of dock

2005-03-11  Lluis Sanchez Gual <lluis@novell.com>

	* Internal/Project/Combine/Combine.cs: Fixed wrong event subscriptions.

2005-03-11  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/Project/ProjectService.cs: Search for new files after the
	whole combine has been loaded.
	* Internal/Project/Project/Project.cs: Don't show the include file
	dialog because it doesn't work. It will work with the new solution
	pad. All this partially fixes bug #71688.

2005-03-10  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/SplashScreen.cs: Use an alignment, not labels.

2005-03-10	Christian Hergert	<christian.hergert@gmail.com>

	* Gui/Dialogs/SplashScreen.cs: Add progress bar with status
	message support. Will help users with slow initial startup
	times.

2005-03-09  John Luke  <john.luke@gmail.com>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	remove toolbarContainer that was causing an assertion
	and was no longer used

2005-03-08  Todd Berman  <tberman@off.net>

	* Gui/AbstractViewContent.cs: only emit an event when the name
	actually changes.

2005-03-07  Lluis Sanchez Gual  <lluis@novell.com>

	* Commands/MenuItemBuilders.cs: Added null check.
	
	* Services/MenuService/MenuService.cs: Added new ShowContextMenu
	method.
	* Services/Tasks/OutputProgressMonitor.cs: Fixed namespace.
	* Services/Tasks/TaskService.cs: The id of output pads are now
	like "OutputPad1".
	
	* Services/Project/IProjectService.cs,
	* Services/Project/ProjectService.cs: Added FileRenamedInProject event.
	  
	* Services/ParserService/ClassInformationEventHandler.cs: Added a
	Project property to ClassInformationEventArgs.
	
	* Services/ParserService/ProjectCodeCompletionDatabase.cs: Handle the
	new FileRenamedInProject event.
	
	* Services/ParserService/DefaultParserService.cs,
	* Services/ParserService/CodeCompletionDatabase.cs,
	* Services/ParserService/IParserService.cs: Added GetClassList method
	and added a new includeReferences parameter to GetNamespaceList.
	
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Avoid memory leaks.
	* Gui/Pads/DefaultMonitorPad.cs: Set the correct namespace.
	* Internal/Project/Project/ProjectFileEventArgs.cs: Added new
	handler for file rename events.
	* Internal/Project/Project/ProjectFile.cs: Use the new file renamed
	event. Fixed RelativePath property.
	* Internal/Project/Project/Project.cs: Use the new file renamed event.
	Moved find code to ProjectFileCollection.
	* Internal/Project/Project/Collections/ProjectReferenceCollection.cs:
	improved handling of events.
	* Internal/Project/Project/Collections/ProjectFileCollection.cs:
	Added file find method.
	* Internal/Project/Combine/Combine.cs: Use the new file renamed event.
	Other minor fixes.
	* Internal/Project/Combine/CombineEntry.cs: Notify the combine when
	an entry is removed.

2005-03-04	Christian Hergert	<christian.hergert@gmail.com>

	* Gui/Pads/FileScout/FileScout.cs: Fix race condition when adding files
	to the pad.

2005-02-26  Poul Andersen  <pba@mailme.dk>
	* Services/MessageService.cs: Added ShowMessage(string message, Gtk.Window parent )
	to ensure modal messagebox as window on top.

2005-02-20  John Luke  <john.luke@gmail.com>

	* Gui/Components/SharpMessageBox.cs
	* Gui/Components/StatusBar/AxStatusBarPanel.cs
	* Gui/Components/StatusBar/AxStatusBar.cs
	* Gui/Components/SideBar
	* Gui/Components/SideBar/AxSideBar.cs
	* Gui/Components/SideBar/AxSideTabItem.cs
	* Gui/Components/SideBar/AxSideTab.cs
	* Gui/Components/SideBar/SharpDevelopSideBar.cs
	* Gui/Components/SideBar/SharpDevelopSideTabItem.cs
	* Commands/SideBarCommands.cs:
	* Gui/Pads/SideBarView.cs:
	* Gui/ErrorDialogs:
	* Gui/ErrorDialogs/LoadingError.cs:
	* Makefile.am: remove unused stuff from SD

2005-02-11  Todd Berman  <tberman@off.net>

	* Services/Project/ProjectService.cs:
	* Internal/Project/Combine/CombineEntry.cs:
	Make sure the filename is valid for the format.

2005-02-11  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/Project/ProjectService.cs: Fix default file formats.

2005-02-11  Ben Motmans <ben.motmans@gmail.com>

	* Internal/ProgressMonitoring/BaseProgressMonitor.cs:
	moved cancelRequestedEvent inside MbrWrapper
	* Services/Tasks/TaskService.cs
	* Services/Tasks/OutputProgressMonitor
	* Services/ProcessService/ProcessService.cs
	* Gui/Pads/DefaultMonitorPad.cs:
	Added kill and clear button

2005-02-10  Todd Berman  <tberman@off.net>

	* Internal/Project/Combine/Combine.cs: Don't generate makefiles on
	Save.

2005-02-10  Todd Berman  <tberman@off.net>

	* Services/Project/DefaultProjectService.cs: Moved, see below.
	* Services/Project/ProjectService.cs:
	* Makefile.am:
	* MonoDevelopCore.addin.xml:

	Moved DefaultProjectService to ProjectService.

2005-02-10  Todd Berman  <tberman@off.net>

	* Commands/FileCommands.cs:
	* Services/Project/DefaultProjectService.cs:
	* Services/IconService.cs:
	* Gui/Dialogs/NewProjectDialog.cs:
	* Makefile.am:
	* Internal/Project/PrjxFileFormat.cs:
	* Internal/Project/MdsFileFormat.cs:
	* Internal/Project/Project/Project.cs:
	* Internal/Project/CmbxFileFormat.cs:
	* Internal/Project/Combine/Combine.cs:
	* Internal/Project/MdpFileFormat.cs:
	* Internal/Templates/ProjectTemplates/CombineDescriptor.cs:
	* Internal/Templates/ProjectTemplates/ProjectDescriptor.cs:
	* MonoDevelopCore.addin.xml:
	
	Changes to make the default file extensions .mds and .mdp. Your
	projects will be converted to this fileformat by default.

	Also a lot of misc changes across the codebase to make this work
	properly with other bad code that checks for .CMBX and .PRJX.

2005-02-09  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/TreeViewOptions.cs
	* Gui/Dialogs/NewFileDialog.cs: dont ref XmlForms

	* Gui/Dialogs/TabbedOptions.cs
	* Gui/Dialogs/InputBox.cs
	* Gui/Dialogs/FusionNative.cs
	* Gui/XmlForms
	* Gui/XmlForms/BaseSharpDevelopForm.cs
	* Gui/XmlForms/SharpDevelopPropertyValueCreator.cs
	* Gui/XmlForms/SharpDevelopObjectCreator.cs
	* Gui/XmlForms/SharpDevelopStringValueFilter.cs
	* Gui/XmlForms/BaseSharpDevelopUserControl.cs
	* Makefile.am: kill some unused stuff

2005-02-02  Lluis Sanchez Gual  <lluis@novell.com>

	* Gui/Dialogs/CombineConfiguration/CombineStartupPanel.cs: 
	Fix nullref exception when saving. 'store' wasn't being set.

2005-02-02  John Luke  <john.luke@gmail.com>

	* Commands/MenuItemBuilders.cs: only use RecentItem.Private
	if it contains something, should fix disappearing labels

2005-02-02  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/CombineConfiguration/CombineBuildOptions.cs
	* Gui/Dialogs/OptionPanels/ProjectOptions/OutputOptionsPanel.cs
	* Gui/Dialogs/OptionPanels/ProjectOptions/DeployFileOptions.cs
	* Gui/Dialogs/OptionPanels/ExternalToolPanel.cs
	* Gui/Dialogs/OptionPanels/IDEOptions/LoadSavePanel.cs
	* Base.glade: use Gnome.FileEntry where appropriate
	remove disabled line endings prefs
	a few other spacing, spelling, capitalization improvements

2005-02-02  John Luke  <john.luke@gmail.com>

	* Parser/ICompilationUnitBase.cs:
	* Parser/Implementations/AbstractCompilationUnit.cs: adjust to ErrorInfo 

2005-01-31  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/Project/DefaultProjectService.cs: In BuildActiveCombine(),
	show the output window even if compilation is not needed.
	Register file formats defined in the configuration file.
	
	* Services/ParserService/CodeCompletionDatabase.cs:
	* Services/ParserService/ProjectCodeCompletionDatabase.cs: Use project
	events to detect when project files are modified/added/removed.
	* Services/ParserService/DefaultParserService.cs: Remove subscription
	to projectService.FileAddedToProject. This is now handled in the
	ProjectCodeCompletionDatabase.
	
	* Gui/Components/SdMenuSeparator.cs: Separators are visible by default.
	* Gui/Components/SdMenuCommand.cs: If the command is not visible,
	avoid the ShowAll() call at the end.
	* Services/MenuService/MenuService.cs: Don't use ShowAll() to show
	the menu since it will also show hidden menu items.
	
	* Gui/Pads/OpenTaskView.cs: The Description, Path and File columns
	are now resizable.
	
	* Gui/Pads/DefaultMonitorPad.cs: Only reposition the cursor when a line
	of text is complete.
	
	* Makefile.am: Added new file format codon.
	
	* Internal/Project/Project/ProjectFile.cs: Removed the
	FileSystemWatcher from ProjectFile. File changes are now detected at
	project level. This saves lots of resources for big projects.
	
	* Internal/Project/Project/Project.cs: Properly detect when a project
	needs to be built.
	
	* Internal/Project/Combine/CombineEntry.cs:
	* Internal/Project/Combine/Combine.cs: Removed GetOutputFileName()
	method. It does not make sense in Combine.
	
	* Internal/ProgressMonitoring/LogTextWriter.cs: Added method for
	chaining several text writers.
	
	* MonoDevelopCore.addin.xml: Defined extension path for custom
	file formats.

2005-01-31  John Luke  <john.luke@gmail.com>

	* Gui/Components/SdToolbarCommand.cs:
	* Services/Toolbar/ToolbarService.cs:
	use newer gtk toolbar API, and simplify it a little

2005-01-30  John Luke  <john.luke@gmail.com>

	* Internal/Project/Project/DotNetProject.cs: pass fileName
	to the LangaugeBinding to determine if it is compilable
	fixes bug# 71694

2005-01-28  John Luke  <john.luke@gmail.com>

	* Services/ParserService/DefaultParserService.cs:
	* Parser/IParser: use CanParse () instead of HandlesFileExtension
	to be consistent with what SD did upstream

2005-01-27  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/CommonAboutDialog.cs: use a timeout
	to make scrolling a more constant speed
	* Gui/Dialogs/SharpDevelopAboutPanels.cs: remove
	a bunch of stale code

2005-01-27  John Luke  <john.luke@gmail.com>

	* Base.glade: update to newer glade format

	* Commands/ToolsCommands.cs:
	* Commands/FileCommands.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Dialogs/CombineConfiguration/CombineStartupPanel.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/SelectStylePanel.cs:
	* Base.glade:
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyAttribute.cs:
	* Internal/Templates/ProjectTemplates/ProjectTemplate.cs:
	use ComboBox instead of OptioMenu and fix a bunch of little warnings

2005-01-27  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/ParserService/CodeCompletionDatabase.cs: Moved classes to
	their own files, which are the following:
	
	* Services/ParserService/AssemblyCodeCompletionDatabase.cs:
	* Services/ParserService/ClassEntry.cs:
	* Services/ParserService/FileEntry.cs:
	* Services/ParserService/NamespaceEntry.cs:
	* Services/ParserService/ProjectCodeCompletionDatabase.cs:
	* Services/ParserService/SimpleCodeCompletionDatabase.cs:
	* Services/ParserService/ReferenceEntry.cs: New files.

2005-01-27  Christian Hergert <chris@mosaix.net>

	* Gui/Pads/HelpBrowser/MonodocTreePad.cs: Fix to use new ShowView in
	DefaultWorkbench.

2005-01-27  John Luke  <john.luke@gmail.com>

	* Makefile.am: 
	* Services/File/RecentOpen.cs:
	* Services/File/DefaultFileService.cs:
	* Gui/BrowserDisplayBinding/BrowserDisplayBinding.cs: use Gnome.Vfs

2005-01-27  Lluis Sanchez Gual  <lluis@novell.com>

	* Gui/IWorkbench.cs:
	* Gui/Workbench/DefaultWorkbench.cs:
	* Services/File/IFileService.cs: 
	* Services/File/DefaultFileService.cs: Added BringToFront parameter
	in OpenFile.
	
	* IProjectService.cs:
	* Services/Project/DefaultProjectService.cs: Return IAsyncOperation
	in OpenCombine, so the load operation can be controlled.
	Use the new BringToFront parameter set to false when opening the
	files of a combine. No more window dances.
	
	* Internal/Templates/ProjectTemplates/ProjectTemplate.cs: Wait for
	the combine to be completely loaded before opening the project
	files. This fixes #61028.

2005-01-26  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/Tasks/StatusProgressMonitor.cs: Forgot to save the
	showErrorDialogs parameter.
	* Services/Project/DefaultProjectService.cs: Catch and report combine
	load errors.
	* Internal/Project/CmbxFileFormat.cs:
	* Internal/Project/PrjxFileFormat.cs: Version '1' is the same as '1.0.
	* Internal/Project/Project/UnknownProjectVersionException.cs: Improved
	error message.
	* Internal/ProgressMonitoring/BaseProgressMonitor.cs: \n is not nice
	in the status bar.

2005-01-25  Todd Berman  <tberman@off.net>

	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Add ShowNotification
	and use it to make the tablabel blue.
	* Gui/Components/SdMenuCheckBox.cs: Use markup instead of text, this
	will allow the view menu item builder to show things properly.
	* Gui/IWorkbenchWindow.cs: Add ShowNotification get; set;
	* Commands/MenuItemBuilders.cs: Use ShowNotification to properly show
	the open contents menu.

2005-01-25  Lluis Sanchez Gual  <lluis@novell.com>

	* Internal/Project/Project/Project.cs: Honor ExternalConsole option
	when running an execution script.

2005-01-25  Lluis Sanchez Gual <lluis@novell.com>
	
	* Services/DispatchService/DispatchService.cs: Don't set the gui sync
	context here. The default context won't be always a safe context.
	* Services/DispatchService/SyncContextAttribute.cs: Set the target
	context when switching to a new context.
	* Internal/ProgressMonitoring/BaseProgressMonitor.cs:
	* Services/Tasks/OutputProgressMonitor.cs: OnWriteLog is now only called
	internally, so no need for async.
	* Services/ProcessService/ProcessService.cs: Added parameter to
	StartConsoleProcess to allow running a console process inside MD.
	* Services/ProcessService/ProcessWrapper.cs: More than one thread may
	want to wait for the process, so use ManualResetEvent instead of
	AutoResetEvent.
	* Services/Project/DefaultProjectService.cs: Don't use output monitors
	for project execution, since the project will create the output panel
	when needed.
	* Internal/Project/Project/DotNetProject.cs: Start processes using the
	new StartConsoleProcess method.
	* Internal/Project/Combine/Combine.cs: For multiple startup combines, run
	all projects in parallel.
	* Internal/ProgressMonitoring/NullProgressMonitor.cs: Set the wait event
	when all is done.

	* Commands/ProjectBrowserCommands/ReferenceFolderNodeCommands.cs:
	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs:
	* Commands/HelpCommands.cs:
	* Services/ParserService/DefaultParserService.cs:
	* Services/ParserService/CodeCompletionDatabase.cs:
	* Gui/Dialogs/DirtyFilesDialog.cs:
	* Gui/Dialogs/ProjectOptionsDialog.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/CompileFileProjectOptions.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/DeployFileOptions.cs:
	* Gui/Dialogs/NewFileDialog.cs:
	* Gui/Dialogs/ReferenceDialog/WebReference.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Pads/ClassScout/NodeBuilder/DefaultDotNetClassScoutNodeBuilder.cs:
	* Gui/Pads/HelpBrowser/MonodocTreePad.cs:
	* Internal/Project/Project/IncludeFilesDialog.cs:
	* Internal/Project/Project/Project.cs:
	* Internal/ProgressMonitoring/ConsoleProgressMonitor.cs:
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyMethod.cs:
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyField.cs:
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyAttribute.cs:
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyProperty.cs:
	* Internal/Serialization/DataCollection.cs:
	* Internal/Serialization/ItemProperty.cs: Fix warnings.

2005-01-24  Lluis Sanchez Gual <lluis@novell.com>

	* Services/Project/DefaultProjectService.cs: Don't raise the combine
	opened event until all is done.
	* Internal/ProgressMonitoring/BaseProgressMonitor.cs: Add the exception
	message to the log.
	* Internal/Project/Project/DotNetProject.cs: Execute mono through sh.
	This is a workaround to what seems like a bug in mono.

2005-01-24  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/ParserService/DefaultParserService.cs:
	* Services/ParserService/CodeCompletionDatabase.cs:
	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs:
	* Gui/Pads/TerminalPad.cs:
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs:
	* Internal/Codons/LanguageBinding/ILanguageBinding.cs:
	* Internal/Project/PrjxFileFormat.cs:
	* Internal/Project/CmbxFileFormat.cs:
	* Internal/Project/IFileFormat.cs:
	* Internal/Project/Project/DotNetProject.cs:
	* Internal/Project/Project/Project.cs:
	* Internal/Project/Combine/Combine.cs:
	* Internal/Project/Combine/CombineEntry.cs:
	* Internal/Templates/ProjectTemplates/CombineDescriptor.cs:
	* Internal/Templates/ProjectTemplates/ProjectDescriptor.cs:
	* Commands/MenuItemBuilders.cs: Use the new progress monitor API.
	
	* Internal/ProcessMonitoring/*: New progress monitoring classes.
	
	* Commands/RunCommands.cs: Factorized a lot of common code into
	ProjectService.cs.
	
	* Services/DispatchService/DispatchService.cs: Added new ThreadDispatch
	method, which dispatches the call in a new thread (and does not queue the
	call, like BackgroundDispatch).
	
	* Services/ProcessService/ProcessService.cs: StartProcess now returns
	a reference to the started process. Added a StartProcess methods that
	writes the output in a text writer.
	Added StartConsoleProcess method which runs a process in an xterm.
	
	* Services/ProcessService/ProcessWrapper.cs: Added WaitForOutput method
	which blocks until all process output has been read.
	
	* Services/Project/DefaultProjectService.cs: Use the new progress
	monitor API. Factorized here some methods from RunCommands.cs.
	
	* IProjectService.cs: Added new methods for building and running projects.
	Removed some event methods that are now handled internally.
	
	* Services/StatusBar/IStatusBarService.cs:
	* Services/StatusBar/DefaultStatusBarService.cs: Simplified. All progress
	monitoring is now done by TaskService. Added API for managing the progress
	bar and showing and hiding the icons.
	
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Allow dynamic addition of
	new pads.
	
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Sanity fix.
	
	* Base.glade:
	* Internal/Project/Project/AbstractProjectConfiguration.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/OutputOptionsPanel.cs: Added
	option for chosing bewteen internal or external output window.
	
	* Gui/Components/StatusBar/SdStatusBar.cs: Don't use AppBar any more, and
	use something that allows more flexibility. Added support for icons.
	
	* Internal/Codons/LanguageBinding/DefaultCompilerResult.cs: Added new
	properties: WarningCount, ErrorCount, BuildCount, FailedBuildCount.
	
	* Internal/Project/ProjectPathItemPropertyAttribute.cs: Minor fix.
	
	* Internal/Project/Project/ProjectReference.cs: Added new useful
	constructors.
	
	* Gui/Pads/ProjectBrowser/BrowserNode/FileNode.cs:
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs:
	* Gui/Pads/ProjectBrowser/NodeBuilder/DefaultDotNetNodeBuilder.cs:
	* Gui/Pads/OpenTaskView.cs: Fix warnings.
	
	* Makefile.am: Added new files.

2005-01-18  Lluis Sanchez Gual  <lluis@novell.com>

	* Internal/Project/CmbxFileFormat.cs: Fix hang when the entry list
	is empty.

2005-01-17  Todd Berman  <tberman@off.net>

	* Gui/Pads/FileScout/FileList.cs: This is a ListStore, not a
	TreeStore.

2005-01-17  Lluis Sanchez Gual  <lluis@novell.com>

	* Internal/Serialization/ItemProperty.cs: Added workaround for a bug
	in mono 1.0 (enum values are encoded as ints in attributes).

2005-01-14  Christian Hergert <chris@mosaix.net>

	* Commands/FileCommands.cs: Added a Close All menu item.
	* Gui/Dialogs/CommonAboutDialog.cs: Added Christian to authors array.
	* MonoDevelopCore.addin.xml: Removed Close Solution shortcut. Added Close File
	shortcut.

2005-01-14  Lluis Sanchez Gual  <lluis@novell.com>

	* Makefile.am, AbstractProject.cs, Project.cs: Renamed AbstractProject.cs.
	* Internal/Project/ProjectPathItemPropertyAttribute.cs: Ignore empty paths.

2005-01-13  Todd Berman  <tberman@off.net>

	* Internal/Project/Project/AbstractProject.cs: Actually start the
	Execute Script.

2005-01-11  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/Project/DefaultProjectService.cs: Added support for custom
	file formats and project types.
	
	* Gui/Dialogs/OptionPanels/ProjectOptions/OutputOptionsPanel.cs:
	* Base.glade: Moved here the OutputOptionsPanel dialog from the c#
	binding.
	
	* Internal/Codons/LanguageBinding/ILanguageBinding.cs: Moved some methods
	to the new IProjectBinding interface, since they are language independent.
	Actually, ILanguageBinding is now a "dot net language binding". Support for
	non-.net languages should be implemented by extending IProjectBinding.
	
	* Internal/Project/Project/AbstractProjectConfiguration.cs: Moved some
	properties to the new DotNetProjectConfiguration, and added some others
	from the language bindings.
	
	* Internal/Project/Project/AbstractProject.cs: The IProject interface
	is not used anymore. All serialization code has been removed and
	reimplemented in PrjxFileFormat. Some methods have been moved to the
	new base class CombineEntry, and some others to the DotNetProject
	subclass.
	
	* Internal/Project/Combine/Combine.cs: It is now a subclass of
	CombineEntry. All serialization code has been removed and
	reimplemented in CmbxFileFormat. The class interface has been simplified.
	
	* Internal/Project/Combine/CombineEntry.cs: It is now the base class
	for Combine and Project. Some common properties have been factorized
	here.
	
	* Internal/Templates/ProjectTemplates/ProjectTemplate.cs: LanguageName
	is optional.
	* Internal/Templates/ProjectTemplates/ProjectDescriptor.cs: Use the new
	project type model.
	* MonoDevelopCore.addin.xml: Added extension path for project types.
	
	* Services/Project/FileFormatManager.cs: New file. Class that allows
	to register new types of combine entry files.
	* Internal/Conditions/LanguageActiveCondition.cs: New file. Condition
	that checks the language of the current project.
	* Internal/Codons/ProjectBinding/IProjectBinding.cs: New file.
	Interface that represents a project binding.
	* Internal/Codons/ProjectBinding/ProjectBindingCodon.cs: new codon for
	project bindings.
	* Internal/Project/Attributes/*: Removed. Equivalent funcionality is
	now provided by MonoDevelop.Internal.Serialization.
	
	* Internal/Project/IFileFormat.cs: Base interface for file format
	implementations.
	* Internal/Project/PrjxFileFormat.cs: Implements serialization into the
	prjx file format. 
	* Internal/Project/CmbxFileFormat.cs: Implements serialization into the
	cmbx file format.
	
	* Internal/Project/Project/DotNetProject.cs: 
	* Internal/Project/Project/DotNetProjectBinding.cs:
	* Internal/Project/Project/DotNetProjectConfiguration.cs: A basic .net
	project implementation.
	
	* Internal/Project/Project/IProject.cs: Removed. Not needed anymore.
	* Internal/Project/Combine/CombineEntryRenamedEventArgs.cs: New file.
	
	* Internal/Serialization/*: A generic data serializer.
	
	* Other files: Follow architecture changes.

2004-01-03  Todd Berman  <tberman@off.net>

	* Commands/RunCommands.cs:
	* Services/Project/DefaultProjectService.cs:
	* Services/Project/IProjectService.cs:
	* Gui/Pads/OpenTaskView.cs:
	* Makefile.am:
	* Internal/Project/Project/ProjectCompileEventHandler.cs:
	Change ProjectService.EndBuild to emit a bool variable to denote the
	success or failure of the combine build. Add a new delegate. Patch
	various uses to properly use new delegate.

2004-12-26  Sander Rijken <sr+ximianbugs@d-90.nl>

	* Services/ProcessService/ProcessService: Set property
	"EnableRaisingEvents" to true, to be able to catch the Process.Exited
	event.
	* Internal/ExternalTool/ExternalTool.cs: Load the UseOutputPad setting
	from config file.
	
2004-12-21  Todd Berman  <tberman@off.net>

	* Services/Toolbar/ToolbarService.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Dialogs/CommonAboutDialog.cs:
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs:
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs:
	* Internal/Project/Project/ConvertXml.cs:
	* Internal/Project/Combine/CombineEntry.cs: Remove/Fix code causing
	warnings.

2004-12-21  Sander Rijken  <sr+ximianbugs@d-90.nl>

	* Services/ProcessService/ProcessService.cs: 
	* Services/ProcessService/ProcessWrapper.cs:
	* Services/Runtime.cs: Add new ProcessService property.
	* Makefile.am: Add new files.
	* Commands/MenuItemBuilders.cs: Wire the console output of external
	tools to the output pad.

2004-12-21  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/DispatchService/DispatchService.cs: Removed unneded check
	for empty queue in QueueMessage. Not needed since all changes are now
	done inside a lock.
	* Services/DispatchService/SyncContext.cs: Fixed the delegate generator.
	The implementation was wrong. Also added a sample generated class to
	help understand what it does.
	* Gui/Pads/OpenTaskView.cs: Keep track of added tasks. TaskService
	events can be sent asynchronously, so when the event is handled,
	there is no	guarantee that the state of the task service is the same
	as when the event was raised.
	
2004-12-16  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/DispatchService/SyncContext.cs: Dispatch delegate calls
	asynchronously, no minimize the risk of deadlocks.

2004-12-16  Lluis Sanchez Gual <lluis@novell.com>

	* Services/DispatchService/DispatchService.cs: added a locks for accessing
	the message queue. In synchronous calls, don't use gui dispatch if the
	calling thread is already the gui thread.
	* Services/ParserService/DefaultParserService.cs: Removed unneeded lock
	that was causing deadlocks.

2004-12-15  Sander Rijken  <sr+ximianbugs@d-90.nl>

	* Commands/CustomStringTagProvider.cs: Patch to have COMBINEDIR return
	the actual directory instead of the filename, COMBINEFILENAME already
	does that.

2004-12-14  John Luke  <john.luke@gmail.com>

	* Gui/Dialogs/CommonAboutDialog.cs:
	only redraw the right-half on scrolling
	use an array and a stringbuilder to build CreditText
	remove the old SD quotes

2004-12-13  Lluis Sanchez Gual <lluis@novell.com>

	* Gui/BrowserDisplayBinding/HtmlViewPane.cs:
	StatusBarService.ProgressMonitor is not a StatusBar widget any more.

2004-12-13  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/StatusBar/DefaultStatusBarService.cs: Made it gui thread safe.

2004-12-11  Alexandre Gomes <alexmipego@hotmail.com>
	
	* Commands/EditCommands.cs,
	* Gui/ContentInterfaces/ICodeStyleOperations.cs: Added support and menu
	entries for the already implemented Indent and UnIndent selection.

2004-12-09  Todd Berman  <tberman@off.net>

	* Gui/Pads/HelpBrowser/HelpViewer.cs: gtk# API changed again (thanks
	mikey!)

2004-12-08  Everaldo Canuto  <everaldo_canuto@yahoo.com.br>

	* Internal/Project/Combine/Combine.cs: Add support to multiple runtime
	in Makefiles generated by MonoDevelop.
	
2004-12-07  Alexandre Gomes <alexmipego@hotmail.com>

	*  Gui/ContentInterfaces/ICodeStyleOperations.cs: Added to rule style changes in code like (Un)Comment Code
	* Commands/EditCommands.cs: Changed to handle (Un)CommentCode menu options
	* Internal/Codons/LanguageBinding/ILanguageBinding.cs: Added CommentTag to all language bindings
	* MakeFile.am: Added reference to Gui/ContentInterfaces/ICodeStyleOperations.cs

2004-12-07  Todd Berman  <tberman@off.net>

	* Gui/Pads/HelpBrowser/HelpViewer.cs: Update to new gtk# api.

2004-12-07  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/DispatchService/DispatchService.cs: Made some method non-static.
	* Services/DispatchService/GuiSyncContext.cs: Minor fix.
	* Services/Tasks/TaskService.cs: Added ShowTasks method, which brings
	to the front the task view.
	* Services/Project/DefaultProjectService.cs: It is the resposibility
	of the subscriber to handle the event in the right thread.
	* Services/MessageService.cs: Handle gui-thread transitions automatically
	by deriving from GuiSyncAbstractService.
	* Gui/Workbench/DefaultWorkbench.cs,
	* Gui/Pads/OpenTaskView.cs,
	* Gui/Pads/TerminalPad.cs,
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs,
	* Gui/Pads/ClassScout/ClassScout.cs: Subscribe to service events using
	gui-thread aware delegates.
	* Makefile.am: New file.

2004-12-06  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/DispatchService/DispatchService.cs: Added support for
	synchronous dispatch to the gui thread.
	* Services/DispatchService/AsyncDispatchAttribute.cs:
	* Services/DispatchService/SyncContext.cs:
	* Services/DispatchService/SyncObject.cs:
	* Services/DispatchService/FreeDispatchAttribute.cs:
	* Services/DispatchService/SyncContextAttribute.cs:
	* Services/DispatchService/GuiSyncContext.cs:
	* Services/DispatchService/GuiSyncObject.cs: New classes that support
	some new dispatch features.

2004-12-06  Lluis Sanchez Gual  <lluis@novell.com>

	* *.cs: Removed remaining calls to ServiceManager.GetService.

2004-12-06  Lluis Sanchez Gual  <lluis@novell.com>

	* Services/Runtime.cs: Root class that gives access to all services.
	* Gui/GuiService.cs: Root class that gives access to some gui-related
	services.
	* Services/ClassBrowserIcons/ClassBrowserIconsService.cs: Moved to
	IconService.cs.
	* Services/ResourceService.cs: Format.
	* Services/IconService.cs: Moved here methods from ClassBrowserIcons.
	* Makefile.am: Added new files.
	* *.cs: Removed all calls to ServiceManager.GetService (some files
	are still missing).

2004-12-05  John BouAntoun  <jba-mono@optusnet.com.au>

	* Internal/Project/Combine/Combine.cs: made it work with mono svn head Posix OEE

2004-12-03  John Luke  <john.luke@cfl.rr.com>

	* Commands/MenuItemBuilders.cs:
	* Gui/Components/SdMenuCommand.cs: use AccelMap instead of Accel.Map*
	* Gui/Dialogs/SharpDevelopAboutPanels.cs: 
	* Gui/Dialogs/CommonAboutDialog.cs:
	* Gui/Dialogs/WordCountDialog.cs:
	* Gui/Pads/FileScout/FileList.cs:
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs: remove obsolete GType stuff,
	use ComboBox instead of obsolete OptionMenu

2004-12-03  Lluis Sanchez Gual  <lluis@novell.com>

	* Gui/Pads/ClassScout/NodeBuilder/DefaultDotNetClassScoutNodeBuilder.cs:
	UpdateClassTree: Changed parameter parentNode to projectNode,
	since this is what it is. DropPhantomNamespaces now deletes
	unexpanded namespaces if they are empty. This fixes bug #70149.

2004-12-01  John Luke  <john.luke@gmail.com>

	* Gui/Pads/FileScout.cs: use ShadowType.In so the
	FileBrowser doesn't look funny when it is the only pad

2004-11-16  Todd Berman  <tberman@off.net>

	* Internal/Project/Project/AbstractProject.cs: Make sure that
	references of references are copied in properly. This code needs to
	be refactored. However, this does work. We should basically be walking
	through the references, for Project references, and calling out
	to a helper function. I will rewrite this soon to be more robust
	and less insane.

2004-11-12  Todd Berman  <tberman@off.net>

	* Gui/HtmlControl/MozillaControl: No gtype registration, fixes
	jba's bug.

2004-11-11  Todd Berman  <tberman@off.net>

	* Makefile.am: Add $(MONO_POSIX_OEE)
	* Internal/Project/Combine/Combine.cs: #ifdef around
	FileMode using. This should fix cvs HEAD users.

2004-11-05  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* Internal/Parser/IParser.cs: Added
	HandlesFileExtension() for selection among multiple parsers
	* Services/ParserService/DefaultParserService.cs: Added
	parser selection using IParser.HandlesFileExtension()

2004-11-02  John Luke  <john.luke@gmail.com>

	* Services/File/RecentOpen.cs: use simpler RecentFiles AddWithLimit
	* Services/File/RecentFiles.cs: sort and return items in the right order
	among some other incremental improvements, should also fix bug #68999
	* Commands/AutoStartCommands.cs: revert Todds workaround from yesterday

	* Services/File/RecentOpen.cs:
	* Services/Project/DefaultProjectService:
	* Commands/MenuItemBuilders.cs: display project name for projects

	* Services/File/DefaultFileService.cs:
	* Services/File/RecentOpen.cs:
	* Commands/MenuItemBuilders.cs:
	* Commands/FileCommand.cs: display File [Project] or just File

2004-11-01	Fawad Halim  <fawad@fawad.net>

	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyParameter.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyMethod.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyReturnType.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyEvent.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyAttribute.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyField.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyProperty.cs:
	Added using aliases for AssemblyReader and SharpCustomAttribute
	to allow compilation with mono HEAD

2004-11-01  Todd Berman  <tberman@off.net>

	* Commands/AutoStartCommands.cs: Open the real last project.

2004-11-01  Todd Berman  <tberman@off.net>

	* Services/File/RecentOpen.cs: Properly handle if the renaming occurs
	on a Directory, or if it is using SourceFile instead of FileName.

	Need to investigate why SourceFile and FileName both exist.

2004-10-29  Todd Berman  <tberman@off.net>

	* Commands/FileCommands: Fix SaveAs.

2004-10-29  Todd Berman  <tberman@off.net>

	* Commands/FileCommands.cs: Patch from Valters Svabe
	<valters@inbox.lv> to close bug #62300

2004-10-28  Todd Berman  <tberman@off.net>

	* Services/File/RecentFiles.cs: Remove C.WL

2004-10-27  Todd Berman  <tberman@off.net>

	* Commands/AutoStartCommands.cs: Fix the Load Previous Project on
	Startup option.

2004-10-27  John Luke  <john.luke@gmail.com>

	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyParameter.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyMethod.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyReturnType.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyEvent.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyAttribute.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyField.cs
	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyProperty.cs:
	Add a using alias for SharpAssembly so we can compile with mcs HEAD
	we were taking advantage of a mcs bug it seems

2004-10-27  Levi Bard <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* Services/ParserService/DefaultParserService.cs: comment out code
	to select the VB parser, because we dont actually have one yet.

2004-10-22  Chris Toshok  <toshok@ximian.com>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: add
	DebuggerThreadPad.

2004-10-22  Chris Toshok  <toshok@ximian.com>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: add
	MonoDevelop.SourceEditor.Gui.DebuggerStackTracePad to the
	debugPads.

2004-10-21  Chris Toshok  <toshok@ximian.com>

	* Gui/Workbench/DefaultWorkbench.cs: don't try to open
	cur_dbgFilename if it's String.Empty.

2004-10-20  John Luke  <john.luke@gmail.com>

	* Commands/MenuItemBuilders.cs:
	* Commands/FileCommands.cs:
	* Commands/AutostartCommands.cs:
	* Services/File/RecentOpen.cs:
	* Services/File/DefaultFileService.cs:
	* Services/Project/DefaultProjectService.cs: enable new Recent Files stuff,
	and small adjustments for it.

2004-10-20  John Luke  <john.luke@gmail.com>

	* Services/File/RecentFiles.cs: fix a bunch of bugs

2004-10-20  John Luke  <john.luke@gmail.com>

	* Makefile.am: remove RingBuffer, add RecentFiles (not used yet)
	* Services/File/FdoRecentFiles.cs
	* Services/File/RecentItem.cs
	* Services/File/RingBuffer.cs: remove old unused stuff
	* Services/File/RecentFiles.cs: new in-progress implementation

2004-10-15  Todd Berman  <tberman@off.net>

	* Internal/Project/Combine/CombineEntry.cs: Before running, copy
	all dependant output assemblies to the proper place.

2004-10-12  Gert Driesen  <drieseng@users.sourceforge.net>

	* Internal/Parser/SharpAssemblyLayer/SharpAssemblyClass.cs:
	use alias to workaround mcs change

2004-10-07  Todd Berman  <tberman@off.net>

	* Internal/Project/Project/AbstractProject.cs: Make sure to copy the
	.mdb file if it exists when pushing the new dll into the AppBase of
	the executing assembly. This gives debug info for supporting dlls
	under 1.1.x and HEAD when you click 'Run'.

2004-10-07  Todd Berman  <tberman@off.net>

	* Servers/MessageService.cs: Fix a little (but important) bug with
	ShowMessage not properly working. Now you can actually *close* the
	window. Pretty good.

2004-10-06  Todd Berman  <tberman@off.net>

	* Services/ParserService/CodeCompletionDatabase.cs: Check to see if
	the namespace is already in the list before adding.

2004-09-26  Todd Berman  <tberman@off.net>

	* Gui/Components/SdMenu.cs: this should fix i18n for menus

2004-09-25  Peter Johanson  <latexer@gentoo.org>

	* Gui/Components/SdMenuCheckBox.cs: Workaround released gtk# 1.0.2
	interaction with 1.1.1.

2004-08-10  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/CombineConfiguration/CombineStartupPanel.cs: fix left
	over ${RES:} strings.

2004-08-10  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/NewProjectDialog.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/LoadSavePanel.cs: Patch from
	Samuel Kaufman to change the default project location to ~/Projects.
	<emrysk AT comcast net>

2004-08-09  Todd Berman  <tberman@off.net>

	* Services/SystemAssemblyService.cs: Work w/ cvs HEAD and 1.0.x

2004-08-07  Todd Berman  <tberman@off.net>

	* AssemblyInfo.cs.in: Use new ASSEMBLY_VERSION variable.

2004-07-28  Fawad Halim <fawad@fawad.net>

	* Services/File/DefaultFileService.cs: Added inner class FileInformation as a container for File Opening information. Overloaded OpenFile to accept a delegate to call after File Opening.
	* Services/File/IFileService.cs: Added a delegate FileOpeningFinished for use after File Opening.
	* Services/Tasks/Task.cs: Use OpenFile, having call OnFileOpened after completion.
	* Gui/Pads/ClassScout/ClassScout.cs: Use OpenFile on node activation, having call OnFileOpened after completion.

2004-07-12  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/NewProjectDialog.cs: catch an IOException when
	creating a project with the name of an existing file
	should fix bug #61034

2004-07-05  Todd Berman  <tberman@off.net>

	* Commands/MenuItemBuilders.cs: properly escape filename with
	underscores in them.

2004-07-05  Todd Berman  <tberman@off.net>

	* Gui/Pads/HelpBrowser/HelpViewer.cs: enable images in monodoc.

2004-07-05  Todd Berman  <tberman@off.net>

	* Internal/Codons/MenuItems/MenuItemCodon.cs: allow menuitems with
	a submenu to be translated properly.

2004-07-04  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/OptionPanels/ProjectOptions/DeployFileOptions.cs:
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs:
	* Gui/Pads/ProjectBrowser/BrowserNode/AbstractBrowserNode.cs:
	* Gui/Pads/ProjectBrowser/BrowserNode/ReferenceNode.cs:
	* Gui/Pads/ProjectBrowser/BrowserNode/FileNode.cs:
	* Gui/Pads/ProjectBrowser/BrowserNode/CombineBrowserNode.cs:
	* Gui/Pads/ProjectBrowser/BrowserNode/DirectoryNode.cs:   
	* Gui/Pads/ProjectBrowser/NodeBuilder/DefaultDotNetNodeBuilder.cs:
	* Internal/Project/Project/IncludeFilesDialog.cs:
	Use the MessageService everywhere, and cleanup these files a bit

2004-07-02  Todd Berman  <tberman@off.net>

	* Services/MessageService.cs: Convert most of these to be threadsafe.
	Need to do AskQuestion, but this fixes a bug, so I will commit now.

2004-07-02  Todd Berman  <tberman@off.net>

	* Commands/FileCommands.cs: Dont use the FileFilters, as there are
	not functional at the moment.
	* Services/File/DefaultFileService.cs: don't attempt to load a
	directory, as its never valid.

2004-07-01  John Luke  <jluke@cfl.rr.com>

	* Commands/AutoStartCommands.cs: remove old Code generation,
	assembly preload, and tip of the day on start, because they
	are no longer used, and I believe no longer will be
	someone correct me if I am wrong

2004-07-01  Todd Berman  <tberman@off.net>

	* Gui/Worbench/Layouts/SdiWorkspaceLayout.cs: Remove the code that
	hides the tabs when there is only one item.

2004-07-01  Todd Berman  <tberman@off.net>

	* Services/ResourceService.cs: Remove a lot of code associated with
	loading resources at runtime, etc.

2004-06-29  Todd Berman  <tberman@off.net>

	* Internal/Codons/Templates/ProjectTemplateCodon.cs: new codon for
	project templates.
	* Internal/Templates/ProjectTemplates/ProjectTemplate.cs: convert to
	using new codon based system.
	* Makefile.am: add new file.

2004-06-28  Todd Berman  <tberman@off.net>

	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: make sure everything is
	being disposed on close.
	* Gui/AbstractViewContent.cs: work around small virtual bug, will file
	this when i can replicate in a smaller test case.

2004-06-28  Todd Berman  <tberman@off.net>

	* Services/Project/DefaultProjectService.cs:
	* Services/Project/IProjectService.cs:
	* Internal/Project/Project/IProject.cs:
	* Internal/Project/Project/AbstractProject.cs:
	* Internal/Project/Project/ProjectFile.cs:
	* Internal/Project/Combine/Combine.cs:
	Patch from Ray Molenkamp <ray@yarvje.dyndns.org> to add a FSW that
	monitors for external changes to any file in a project and emits an
	event on the project service for it.

2004-06-28  Todd Berman  <tberman@off.net>

	* Internal/Codons/Templates/FileTemplateCodon.cs: add new codon for
	handling file templates.
	* Internal/Templates/FileTemplate.cs: Use the new codon based system
	instead of the old find files that end in .xft system. This means
	that you can now specify file templates in the addin.xml files and
	it brings us one step closer to being able to split off the backend
	bindings properly. (You will only see templates for bindings you have
	installed).

2004-06-26  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/DirtyFilesDialog.cs: small layout fixes.

2004-06-26  Lluis Sanchez Gual  <lluis@ximian.com>

	* Commands/RunCommands.cs, Services/Project/DefaultProjectService.cs,
	  Internal/Project/Combine/CombineEntry.cs:
	  reflect changes in the TaskService.
	* Services/Tasks/Task.cs: Set comment type if the task do not refer to
	  a file.
	* Services/Tasks/TaskService.cs: Don't allow direct manipulation of the
	  task list, everything must be done through the TaskService api.
	  Added new TaskAdded event.
	* Gui/Pads/OpenTaskView.cs: Use the new TaskAdded event, instead of loading
	  the full list at every change.

2004-06-25  Todd Berman  <tberman@off.net>

	* Services/Project/DefaultProjectService.cs: When restoring combine
	preferences, if xml document is invalid, just return, closes bug
	#60417.

2004-06-25  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/SharpDevelopAboutPanels.cs: Removing ASP mention at
	the request of Mike Krueger.

2004-06-25  Todd Berman  <tberman@off.net>

	* Gui/AbstractViewContent.cs: Make PathRelativeToProject not store in
	a string, and always be correct, no matter if the file is new, or has
	been moved since being loaded.
	* Gui/Dialogs/DirtyFilesDialog.cs: New dialog to use on close, should
	be working perfectly.
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs: formatting fixes.
	* Gui/IViewContent.cs: No longer all PathRelativeToProject to be set.
	* Gui/Workbench/DefaultWorkbench.cs: remove the old closing code, and
	use the new dirty files dialog.
	* Services/File/FileService.cs: Fix LoadWrapperClass to not set the
	path relative to project, as that is handled differently now. Remove
	a method to make a path relative as there is no need for it now.

2004-06-24  Todd Berman  <tberman@off.net>

	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs: set dialog
	to null after we are done with it.

2004-06-24  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/NewSolutionDialog.cs:
	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs:
	* Commands/FileCommands.cs: convert to using new async dispatcher
	stuff.

2004-06-23  Todd Berman  <tberman@off.net>

	* Gui/Dialogs/NewFileDialog.cs: add an event for when Ok is pressed.
	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs: fix
	new file dialog from here.

2004-06-23  Todd Berman  <tberman@off.net>

	* Gui/CompletionDatabaseWizard: removed directory, as its unused.
	* Makefile.am: updated to reflect above.

2004-06-23  Todd Berman  <tberman@off.net>

	* Services/Project/DefaultProjectService.cs: make solution loading take
	place without any gui locks.
	* Service/File/DefaultFileService.cs: proxy OpenFile to a real method
	that gets called in the idle handler.

2004-06-23  Todd Berman  <tberman@off.net>

	* Services/DispatchService/DispatchService.cs: change up a bit
	to allow a void blah () delegate and a void blah (object) delegate.
	Added overloads to hit those.
	* Gui/Pads/ClassScout/ClassScout.cs: Update to new DispatchService
	API.
	* Gui/Dialogs/NewFileDialog.cs: Update to new DispatchService API.

2004-06-23  Todd Berman  <tberman@off.net>

	* Commands/FileCommands.cs: Cleanup a bit, move some code around.
	* Gui/Dialogs/NewFileDialog.cs: Convert to using DispatchService.
	This also tests the BackgroundDispatch method, which seems to be
	working fine. Now New File will no longer lock up the GUI at all.
	Also cleanup misc code, and unused pieces.

2004-06-23  Todd Berman  <tberman@off.net>

	* Gui/Pads/ClassScout/ClassScout.cs: use DispatchService instead of
	IdleWork stuff.
	* Services/DispatchService/DispatchService.cs: new service, used to
	pass messages to the gui, or a background thread. The gui stuff has
	been tested by the ClassScout above, the background thread dispatching
	has yet to be tested.
	* Makefile.am: Add DispatchService.cs

2004-06-21  John Luke <jluke@cfl.rr.com>

	* Gui/Dialogs/OptionPanels/ProjectOptions/CompileFileProjectOptions.cs:
	use the messageservice for a the error dialog
	don't skip the first item when storing whether files should be	
	included, fixes bug # 60363
	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs:
	Change the title of Add Files to Add Files, so it will be clearer
	you can select more than one file
	put the name of the file in the Copy or Move dialog when adding
	an external file, fixes bug # 59516

2004-06-21  Todd Berman  <tberman@off.net>

	* Commands/AutostartCommands.cs: workaround icewm issue, dont show
	tip of the day dialog automatically under any circumstance.

2004-06-21  John Luke <jluke@cfl.rr.com>

	* Gui/Pads/OpenTaskView.cs: implement a popup menu for copying
	a task to the clipboard, bug #56817

2004-06-20  Todd Berman  <tberman@off.net>

	* Services/ParserService/CodeCompletionDatabase.cs: fix nullref in
	file types that dont have a parser.

2004-06-20  Todd Berman  <tberman@off.net>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: fix bug #60352.

2004-06-18  Todd Berman  <tberman@off.net>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: cleanups, and a small
	icon related fixup.

2004-06-18  Todd Berman  <tberman@off.net>

	* Commands/MenuItemBuilders.cs: clean up accel path code.
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: reduce code complexity
	by removing the extra ArrayList. Also properly use the tab reordering
	event, closes bug #60356.

2004-06-17  John Luke  <jluke@cfl.rr.com>

	* Commands/ProjectBrowserCommands/ResourceFolderNodeCommands.cs:
	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs:
	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs:
	* Commands/FileCommands.cs:
	* Gui/Dialogs/OptionPanels/ExternalToolPanel.cs:
	* Gui/Dialogs/ReferenceDialog/AssemblyReferencePanel.cs:
	* Internal/Project/Project/AbstractProject.cs:
	* Internal/Project/Combine/Combine.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/DeployFileOptions.cs:
	use MonoDevelop.Gui.Widgets.FileSelector instead of Gtk.FileSelection

	* Gui/Pads/HelpBrowser/HelpViewer.cs: set IsViewOnly property to true
	so we don't crash on save

	* Gui/Pads/ProjectBrowser/BrowserNode/FileNode.cs:
	do not force an extension on renamed files
	fixes bug # 59677

	* Commands/FileCommands.cs: workaround for #59731

2004-06-16  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/NewProjectDialog.cs: guard against unauthorized
	exception when creating the project directory, and display an error
	message and allow the user to fix it.
	fixes bug # 60001

2004-06-13  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/Deployment/ScriptDeploy.cs: string fix

2004-06-11  Todd Berman  <tberman@sevenl.net>

	* Services/SystemAssemblyService.cs: Dont scan the same path twice.

2004-06-10  Lluis Sanchez Gual  <lluis@ximian.com>

	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs: Set the project of
	  newly added files.
	* Services/ParserService/DefaultParserService.cs: Generate and cache code
	  completion databases for opened files that do not belong to any project.
	* Services/ParserService/CodeCompletionDatabase.cs: Added Clear method.
	  Made Write() virtual. 
	  Added new SimpleCodeCompletionDatabase, for storing information for a
	  single file.
	* Internal/Project/Project/AbstractProject.cs: Ignore members with the
	  xml name set to null.
	* Internal/Project/Project/ProjectFile.cs: Added project filed. Notify
	  the project when the file name changes.
	* Internal/Project/Project/Collections/ProjectFileCollection.cs: assign
	  the project to the files in the collection.

2004-06-06  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/CommonAboutDialog.cs: make the scrollbox not expand
	fixes bug #59652

2004-06-02  Todd Berman  <tberman@sevenl.net>

	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs: call new func.
	* Gui/Dialogs/NewFileDialog.cs: remove dead code
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs: add function that
	worksaround the gtk+ 2.4 regression workaround.

2004-06-02  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/CommonAboutDialog.cs: This is actually how translator
	credits are supposed to work. Update the po and go ahead and
	translate the string "translator_credits" to include what you want
	it to include. It will then show up properly.

2004-06-02  Todd Berman  <tberman@sevenl.net>

	* MonoDevelop.Base.prjx: fixed ICSharpCode.SharpZipLib reference and
	added new file.
	* Gui/Dialogs/CombineConfiguration/CombineBuildOptions.cs: new dialog
	for the .mdsx relative output build path.
	* Makefile.am: add new file.
	* Internal/Project/Combine/Combine.cs: Add BaseDirectory property.
	* Makefile.MonoDevelop.Base: automagic updates to reflect new file
	(This is good to see).

2004-05-30  Todd Berman  <tberman@sevenl.net>

	* Commands/AutostartCommands: Remove some dead code.
	* Services/ParserService/DefaultParserService.cs: Properly setup
	the pathing so it works without an existing setup.

2004-05-30  Lluis Sanchez Gual  <lluis@ximian.com>

	* Services/ParserService/DefaultParserService.cs: Don't use the "Gac:"
	  prefix to reference gac assemblies, they are handled internally by
	  AssemblyCodeCompletionDatabase.
	  When locating an assembly database, take into account partial names,
	  and avoid loading the same db twice.
	  Perform the modified file check taking into account dependencies
	  between databases. This increases the posibility of resolving all classes
	  of a database in the first parse cycle (since its dependecies will be
	  already parsed).
	  Added parameter to GetClass which allows deep search of a class in all
	  project references.
	  In ResolveTypes, added out parameter to inform if all types could be
	  resolved.
	  In ClassInheritanceEnumerator, use a reference deep search to get base
	  classes.
	  
	* IParserService.cs: Added parameter to GetClass which allows deep search of
	  a class in all project references.
	  
	* CodeCompletionDatabase.cs: Increased db version, since the format has
	  changed a bit. Added an easy way for derived classes to serialize data
	  together with the index.
	  When writing the db, make a byte copy from the old file to the new one
	  for classes not loaded.
	  In ProjectCodeCompletionDatabase, if a file can't be fully resolved,
	  schedule a reparse.
	  In GetClass() support lookup of inner classes. Improved some internal
	  methods to support this.

2004-05-29  Todd Berman  <tberman@sevenl.net>

	* Services/Project/DefaultProjectService.cs: try catch around
	generate makefiles, as some bindings toss exceptions.

2004-05-28  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/CombineConfiguration/CombineStartupPanel.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/CompileFileProjectOptions.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/DeployFileOptions.cs:
	* Gui/Dialogs/OptionPanels/ExternalToolPanel.cs:
	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs:
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs:
	* Gui/Pads/HelpBrowser/MonodocTreePad.cs:
	* Internal/Project/Project/IncludeFilesDialog.cs: update to reflect
	gtk-sharp api out -> ref change

2004-05-27  Todd Berman  <tberman@sevenl.net>

	* Services/Project/DefaultProjectService.cs: fix removing files
	from projects via the project browser.

2004-05-27  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/Combine.cs: properly handle spaces in the
	solution and project names.
	* Gui/Pads/ProjectBrowser/BrowserNode/CombineBrowserNode.cs: check
	for invalid characters.

2004-05-27  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/AbstractProject.cs: Properly ignore
	.svn and CVS directories.
	* Gui/Pads/ClassScout/ClassScout.cs: Properly work around potential
	exceptions until we figure out why they are happening.
	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs: start
	the add file dialog in the proper place.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Combine/Combine.cs: fix nullref when you dont
	have a valid single startup project name set.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs: fix up
	per edd's suggestions. Now we select a valid node if possible when
	you remove, and the remove button is only sensitive when an iter is
	selected.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Services/ProjectService/DefaultProjectService.cs: move the call to
	GenerateMakefiles when the solution is closed to somewhere that
	actually generates a makefile.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Combine/Combine.cs: actually tested with a solution
	with 2 projects in it, one that references the other. It works now,
	building, cleaning, running, etc.
	* Internal/Templates/ProjectTemplates/CombineDescriptor.cs: setup
	OutputDirectory properly by default.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/AbstractProject.cs: ignore .pidb, .mdsx and
	make.sh.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Services/Project/DefaultProjectService.cs: auto-generate makefiles
	on changes. I think i hit all the needed events, lets see.

2004-05-26  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: Update Monodoc
	and IsAs resolvers.
	* Services/ParserService/IParserService.cs: Expose new search type
	method for use in Monodoc and IsAs resolvers.
	* Internal/Parser/IParser.cs: Update Monodoc and IsAs resolvers.
	* Gui/Pads/ClassScout/ClassScout.cs: add a null check to workaround
	a *strange* nullref that keeps popping up.

2004-05-26  Lluis Sanchez Gual  <lluis@ximian.com>

	* Services/ParserService/DefaultParserService.cs: Type names for fields,
	  parameters, base classes and so on come unresolved from the parser
	  (without namespace information). They must be resolved before adding them
	  to the database. This is done through the method ResolveTypes.
	* CodeCompletionDatabase.cs: Resolve type names before adding the class to
	  the database.
	* PersistentIndexer.cs, PersistentParameter.cs, PersistentMethod.cs,
	  PersistentReturnType.cs, PersistentEvent.cs, PersistentField.cs,
	  PersistentProperty.cs, PersistentClass.cs: Added method for resolving
	  the type names.

2004-05-25  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: create the directory
	if it doesnt exist.

2004-05-25  Lluis Sanchez Gual  <lluis@ximian.com>

	* Services/File/DefaultFileService.cs: Enabled database regeneration for
	  modified assemblies.

2004-05-25  Lluis Sanchez Gual  <lluis@ximian.com>

	* Commands/ProjectBrowserCommands/ReferenceFolderNodeCommands.cs:
	  Removed call to IParserService.AddReferenceToCompletionLookup. The parser
	  service now receives an event when a reference is added.
	  
	* Commands/AutostartCommands.cs: Disabled generation of initial code
	  completion database.
	  
	* Services/File/DefaultFileService.cs: In LoadFileWrapper, use IProject
	  reference instead of project name.
	
	* Services/Project/DefaultProjectService.cs: Added ReferenceAddedToProject
	  and ReferenceRemovedFromProject events. Changed how event are handled.
	  Now the service just forwards the events received from the open combine.
	  The file events now use a new ProjectFileEventHandler delegate, which
	  provide information about the source project in the args.
	  
	* Services/Project/IProjectService.cs: Added new reference events.
	
	* ParserService/DefaultParserService.cs: Mostly reimplemented. The new
	  implementation uses a unified data structure for storing information
	  from projects and assemblies.
	  
	* Services/ParserService/AssemblyInformation.cs: Added FileName property.
	
	* Services/ParserService/IParserService.cs: Added IProject parameter to
	  most of methods. Added SearchNamespace, SearchType methods (moved
	  from AbstractUnit), and GetClassInheritanceTree (moved from 
	  AbstractClass).
	  Removed ParseInformationAdded and ParseInformationRemoved, and added a
	  new ClassInformationChanged event that provides all change information
	  at once.
	  
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: Take the name of the project
	  from view's IProject property.
	  
	* Gui/IViewContent.cs: Changed ProjectName property to IProject Project
	  property.
	  
	* Gui/Pads/ClassScout/NodeBuilder/DefaultDotNetClassScoutNodeBuilder.cs
	* Gui/Pads/ClassScout/ClassScout.cs: Use the new events and data structures
	  from of parser service. Now, class data is not fully loaded when opening
	  the project, but it is loaded under demand as project nodes are expanded.
	  
	* Gui/Pads/ClassScout/NodeBuilder/IClassScoutNodeBuilder.cs: Use a single
	  method to update the tree from parse event args.
	  
	* Gui/Pads/ProjectBrowser/BrowserNode/ProjectBrowserNode.cs,
	  Gui/Pads/ProjectBrowser/BrowserNode/CombineBrowserNode.cs:
	  Use Combine.RemoveEntry to remove projects from a combine.
	  
	* Gui/AbstractViewContent.cs: Implement new Project property.
	
	* Makefile.am: Added new files: 
	  Services/ParserService/CodeCompletionDatabase.cs,
	  Services/ParserService/ClassInformationEventHandler.cs,
	  Internal/Project/Project/ProjectReferenceEventArgs.cs,
	  Internal/Project/Project/ProjectFileEventArgs.cs,
	  Internal/Project/Combine/CombineEntryEventArgs.cs.
	  
	* Internal/Project/Project/IProject.cs: Added new events for changes in
	  files and references.
	  
	* Internal/Project/Project/Collections/ProjectReferenceCollection.cs
	  Internal/Project/Project/Collections/ProjectFileCollection.cs,
	  AbstractProject.cs,
	  Internal/Project/Combine/Combine.cs:
	  Added support for new events.
	  
	* Internal/Project/Combine/CombineEntry.cs: Created CombineEntryCollection.
	
	* Internal/Parser/PersistenceLayer/PersistentIndexer.cs,
	  Internal/Parser/PersistenceLayer/PersistentParameter.cs,
	  Internal/Parser/PersistenceLayer/PersistentMethod.cs,
	  Internal/Parser/PersistenceLayer/PersistentReturnType.cs,
	  Internal/Parser/PersistenceLayer/PersistentEvent.cs,
	  Internal/Parser/PersistenceLayer/PersistentField.cs,
	  Internal/Parser/PersistenceLayer/PersistentProperty.cs,
	  Internal/Parser/PersistenceLayer/PersistentClass.cs,
	  New implementation of read and write methods based on static methods. In
	  this way it can be used to write instances of any IClass and not only
	  PersistentClass. Also use new helper methods for writing strings and
	  object references.
	  
	* Internal/Parser/IClass.cs: Moved ClassInheritanceTree to IParserService.
	
	* Internal/Parser/ReflectionLayer/ReflectionClass.cs: Added Null check for
	  MonodocService.
	  
	* Internal/Parser/IRegion.cs: Added FileName property.
	
	* Internal/Parser/Implementations/AbstractUsing.cs,
	  Internal/Parser/IUsing.cs: Moved SearchType and SearchNamespace to
	  IParserService.
	  
	* Internal/Parser/Implementations/AbstractDecoration.cs,
	  Internal/Parser/Implementations/AbstractNamedEntity.cs,
	  Internal/Parser/Implementations/AbstractReturnType.cs: Fixed usage of
	  documentation hashtable. GetHashCode() do not return unique values!
	  
	* Internal/Parser/Implementations/DefaultRegion.cs: Implemented FileName
	  property.
	  
	* Internal/Parser/Implementations/AbstractClass.cs: 
	  Moved ClassInheritanceTree to IParserService.
	  
	* Internal/Parser/Implementations/AbstractParameter.cs: Added null check.
	
	* Internal/Parser/IParser.cs: Added Project parameter to some methods.
	
2004-05-25  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Combine/Combine.cs: more makefile magic for
	building, outputting semi-properly, and a make run setup.
	* Internal/Project/Combine/CombineEntry.cs: pass the Combine to the
	makefile being generated.
	* Internal/Codons/LanguageBinding/ILanguageBinding.cs: pass the Combine
	on down.
	* Makefile.am: Add Mono.Posix to the build.

2004-05-24  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/DefaultWorkbench.cs: Setup text/uri-list DnD.
	Tested with single and multiple files/projects from nautilus.
	* Internal/Parser/ReflectionLayer/ReflectionClass.cs: workaround
	potential nullref.
	* Commands/AutostartCommands.cs: fix focus issue.

2004-05-22  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/NewProjectDialog.cs: Sort properly.

2004-05-19  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: potential nullref
	removed.

2004-05-20  Pawel Rozanski  <tokugawa@afn.no-ip.org>

	* Services/Tasks/Task.cs: add a "COMMENT" ErrorNumber in order to
	show TaskType.Comment in Task List.

2004-05-18  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Combine/Combine.cs: load/save a new property
	'RelativeOutputPath' on the solution level. Much hilarity ensues.

2004-05-17  Todd Berman  <tberman@sevenl.net>

	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs:
	* Commands/FileCommands.cs:
	* Gui/Dialogs/NewProjectDialog.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/LoadSavePanel.cs: change from
	SpecialFolder.Personal to getenv ("HOME").

2004-05-16  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs: fix to use
	the new SystemAssemblySerivce.
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs: ^^
	* Gui/Components/SdMenuCommand.cs: remove useless code, use the proper
	overload.
	* Gui/Pads/ClassScout/ClassScout.cs: revert semi-fix of r1600 and add
	a new fix that might or might not work, but will not cause the speed
	issues of the previous fix.
	* Gui/Pads/ClassScout/NodeBuilder/DefaultDotNetClassScoutNodeBuiler.cs:
	^^
	* Gui/Pads/HelpBrowser/HelpViewer.cs: indenting fix.
	* Services/SystemAssemblyService.cs: new service for identifying
	system assemblies (mono installed + pc'd assemblies)
	* Services/ParserService/DefaultParserService.cs:
	* Services/ParserService/IParserService.cs: passthrough for monodoc
	resolver.
	* Makefile.am: add SystemAssemblyService
	* Internal/Project/Project/ProjectReference.cs: proper reference
	information.
	* Internal/Project/Project/AbstractProject.cs: remove windows .ToUpper
	hack.
	* Internal/Project/Combine/Combine.cs: start of solution level
	makefiles.
	* Internal/Parser/IParser.cs: monodoc resolver addition.

2004-05-10  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/DefaultWorkbench.cs: Attempt non-metacity toplevel fix
	* Gui/Dialogs/SplashScreen.cs: explicity set this to popup

2004-05-09  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: use DragNotebook

2004-05-07  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/ClassScout/ClassScout.cs: adding a lock.

2004-05-06  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/ClassScout/ClassScout.cs: try catch to prevent potentialy
	strange threading interactions.

2004-05-04  John Luke  <jluke@cfl.rr.com>

	* Makefile.am: make Services/StockIcons.cs regen properly
	and pass make distcheck

2004-05-04  Pawel Rozanski  <tokugawa@afn.no-ip.org>

	* Makefile.am: Services/StockIcons.cs update is triggered by a changes
	in build/data/resources/icons dir

2004-05-03  Francisco "Paco" Martinez  <paco@mfcon.com>

	* Gui/Dialogs/CommonAboutDialog.cs: Added Paco Martinez name to the
	list of authors

2004-05-02  Todd Berman  <tberman@sevenl.net>

	* Services/Project/IProjectService.cs
	* Services/Project/DefaultProjectService.cs: Add events for Files being
	added and removed.
	* Gui/Pads/ClassScout/ClassScout.cs: Properly update on files added
	and removed.

2004-05-02  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: expose gac lib
	location finder
	* Services/ParserService/AssemblyInformation.cs: remove previous fix
	* Services/ParserService/IParserService.cs: expose gac lib location
	finder
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs: sort properly
	* Internal/Project/Project/ProjectReference.cs: Use parser method to
	find gac lib location.

2004-05-01  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/TreeViewOptions.cs: notify main window that gui effecting
	changes may have occured, update the menu.

2004-05-01  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/OpenTaskView.cs: Fix gtk+2.4 regression.
	* Services/ParserService/DefaultParserService.cs: load assemblies
	out of the GAC for indexing.

2004-04-30  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/HelpBrowser/MonodocTreePad.cs: Hide doc nodes without
	any docs. This is an ugly ugly solution, but it works. Feel free
	to replace it with something better that looks nice.

2004-04-29  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: commenting out
	a GC.Collect () per lluis' instructions, this results in monodevelops
	cpu usage at idle going from 20% to 2%. Good stuff :)

2004-04-29  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/OptionPanels/ExternalToolPanel.cs: fix up to match gtk#
	from cvs.
	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs:
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs:
	Now we actually pull assemblies from the gac.
	NOTE: Until gtk-sharp, and other libraries actually start using the gac
	it will not be possible to add a proper gac reference to them.
	This will be fixed on their end by beta1 however.

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/AbstractProject.cs: Actually make that check
	and the others like it work.

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/AbstractProject.cs: For now, dont ask
	to add new Makefiles.

2004-04-28  Todd Berman  <tberman@sevenl.net>

	* Commands/RunCommands.c:
	* Services/Project/DefaultProjectService.cs: 
	* Services/Project/IProjectService.cs: 
	* Internal/Codons/LanguageBinding/ILanguageBinding.cs:  
	* Internal/Project/Project/IncludeFilesDialog.cs:
	* Internal/Project/Combine/Combine.cs:
	* Internal/Project/Combine/CombineEntry.cs:

	Commit basically sets up the skeleton for the GenerateMakefiles stuff.
	Right now all the real code is in the LanguageBinding, where it
	should be (I think). Anyone looking to add this functionality to their
	LanguageBinding is welcome too, however the api and setup may change
	while the C# implementation is being written, so there are no
	promises at all.


2004-04-27  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/HelpBrowser/MonodocTreePad.cs: Select the content window
	when you render new docs.

2004-04-27  John Luke  <jluke@cfl.rr.com>

	* Gui/Pads/FileScout.cs: kill
	* Gui/Pads/FileScout/FileScout.cs
	* Gui/Pads/FileScout/FileList.cs
	* Gui/Pads/FileScout/FileListItem.cs: split these up, remove
	unneeded/used code, implement File.Delete popup
	* Makefile.am: account for new files

2004-04-25  John Luke  <jluke@cfl.rr.com>
	
	* Gui/Dialogs/WordCountDialog.cs: use ShadowType.in
	* Gui/Pads/ClassScout/ClassScout.cs:
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs:
	implement PopupMenu to show ContextMenus

2004-04-25  Pawel Rozanski  <tokugawa@afn.no-ip.org>
	
	* Gui/Dialogs/CommonAboutDialog.cs: fixed my very Polish name.	

2004-04-25  John Luke  <jluke@cfl.rr.com>
	
	* Gui/Dialogs/CommonAboutDialog.cs:
	update contributors and adjust the scroll slightly	

2004-04-24  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs:
	* Services/ParserService/IParserService.cs:
	* Internal/Parser/IParser.cs: add stubbing for IsAsResolver

2004-04-22  Todd Berman  <tberman@sevenl.net>

	* Gui/Components/SdMenu.cs: check for children, if none, hide menu.
	* Gui/Components/SdMenuCheckBox.cs: small change for gtk-sharp from
	future cvs, should work with current cvs though.

2004-04-20  Todd Berman  <tberman@sevenl.net>

	* Commands/AutostartCommands.cs: Move stuff around so workbench memento
	works.
	* Gui/Workbench/DefaultWorkbench.cs: Same as above.

2004-04-19  Todd Berman  <tberman@sevenl.net>

	* Commands/AutostartCommands.cs: Match new ReflectionLayer api.
	* Services/MonodocService.cs: uncomment GetHelpXml
	* Services/AmbienceService/AmbienceReflectionDecorator.cs: match api.
	* Services/ParserService/AssemblyInformation.cs: match api.
	* Internal/Parser/ReflectionLayer/Reflection*.cs:
	Add the start of documentation integration into the actual IDE.
	Now the docs show up on code completion tooltips, just the summary.
	Potentially we should enable the entire doc for the class/method,
	but I havnt seen how it looks yet, as it will most likely be large
	for some methods/classes.

	**NOTE: To get this documentation integration, you have to rebuild
	your code completion database.

2004-04-17  Todd Berman  <tberman@sevenl.net>

	* Services/Toolbar/ToolbarService.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Workbench/DefaultWorkbench.cs:
	* Gui/Components/SdToolbarCommand.cs:
	Fixup the entire toolbar scheme to actually *work* properly.
	This is only temporary, as the entire toolbar setup is going to be
	rewritten again to support arbitrary widgetry, proper saving/loading of
	toolbars tied to layouts, etc, etc.

2004-04-17  Todd Berman  <tberman@sevenl.net>

	* Gui/Components/SdMenu.cs:
	* Commands/MenuItemBuilders.cs:
	Fix the menu system so we dont rebuild the menu's from scratch every
	time you use them. This should speed using the menu's up a lot.
	The only trick is new SubmenuItemBuilders need to create menu types
	with the ISubmenuItem interface so we can tell that they are built
	and not static.

2004-04-16  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/SharpDevelopAboutPanels.cs: align the labels to
	the left and space them a little better

2004-04-14  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/CommonAboutDialog.cs: chain to base (GType)
	so Gtk# cvs is happy

2004-04-14  Nick Drochak  <ndrochak@gol.com>

	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs: When file is added, 
	put it under the correct folder.

2004-04-14  Pawel Rozanski  <tokugawa@afn.no-ip.org>

	* Commands/RunCommands.cs:
	* Internal/Project/Combine/Combine.cs:
	fix bug #56864.

2004-04-13  John Luke  <jluke@cfl.rr.com>

	* Gui/BrowserDisplayBinding/HtmlViewPane.cs: use Navbar control,
	use StatusBarService for messages and a Progress monitor

2004-04-11  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/WorkbenchMemento.cs: ugh, check for valid data too.

2004-04-11  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/WorkbenchMemento.cs: fix potential nullrefs.

2004-04-11  Todd Berman  <tberman@sevenl.net>

	* Commands/AutostartCommands.cs: reorganize the SetMemento so it works
	better.
	* Gui/Workbench/WorkbenchMemento.cs: readd windowstate.
	* Gui/Workbench/DefaultWorkbench.cs: now we restore from maximized
	properly.

2004-04-10  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/Project/AbstractProject.cs: fix potentiall nullref

2004-04-10  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs:
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs:
	* Gui/IWorkbenchLayout.cs:
	fix bug #56769.

2004-04-09  John Luke  <jluke@cfl.rr.com>

	* Commands/AutostartCommands: remove dead code
	* Gui/Pads/TerminalPad.cs: update and rename from 'Output' to 'Terminal'
	* Gui/HtmlControl/MozillaControl.cs: remove CWL

2004-04-09  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/SharpDevelopAboutPanels.cs: closing per bug #55955.

2004-04-09  Todd Berman  <tberman@sevenl.net>

	* Gui/Components/SdStatusBar.cs: Add pulsing.

2004-04-09  Pawel Rozanski  <tokugawa@afn.no-ip.org>

	* Services/Tasks/Task.cs: don't show "()" when error.ErrorNumber is 
	empty

2004-04-07  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/CommonAboutDialog.cs:
	* Gui/Dialogs/SharpDevelopAboutPanels.cs: rearrange the copyright, 
	license, sponsorship, and version information.  Add back info about    
	SharpDevelop and AlphaSierraPapa
	* Gui/Dialogs/TipOfTheDay.cs: remove IDisposable and call Hide and 
	Dispose instead of Destroy on the window, remove some unneccesary 
	public things
	* Commands/HelpCommand.cs: revert addition of using () {} to 
	tipoftheday
	* Gui/Workbench/DefaultWorkbench.cs: uncomment memento restoring code

2004-04-07  Todd Berman  <tberman@sevenl.net>

	* Commands/ProjectBrowserCommands/FolderNodeCommands: Incorporate bug
	fix for bug #56275 based on a patch from eddie tejeda
	<eddie AT nailchipper DOT com>. Also fix an exception that could
	occur when the file already exists in the target directory.

2004-04-07  Nick Drochak  <ndrochak@gol.com>

	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs: Before the actual edit
	have node un-munge the text it wraps around the combine name.
	* Gui/Pads/ProjectBrowser/BrowserNode/CombineBrowserNode.cs: Re-munge
	name with number of entries after the combine name changes.

2004-04-06  Todd Berman  <tberman@sevenl.net>

	* Commands/FileCommands.cs: Combine the open solution/file into one
	open... command
	* Gui/Pads/FileScout.cs: add .ToUpper () to catch .pRjx, etc.

2004-04-06  Todd Berman  <tberman@sevenl.net>

	* Commands/MenuItemBuilders.cs: change to use alt instead of control
	for a more 'gnomey' feel.

2004-04-06  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/Layouts/SdiWorkspaceLayout.cs: update the menu
	after a context switch.
	* Gui/Components/SdMenu.cs: remove some junk.
	* Internal/Conditions/WorkbenchContextCondition.cs: new condition
	to allow conditionals on current context state.
	* Makefile.am: add above file to build

2004-04-06  Todd Berman  <tberman@sevenl.net>

	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs: fix bug
	#56429.

2004-04-06  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/DefaultWorkbench.cs: register gtype. add message about
	using proper ctor.
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs: remove useless event
	box.

2004-04-04  John Luke  <jluke@cfl.rr.com>

	* Gui/BrowserDisplayBinding/HtmlViewPane.cs:
	* Gui/BrowserDisplayBinding/BrowserDisplayBinding.cs: small cleanups
	* Commands/HelpCommands.cs: make sure dispose is called on the
	tip of the day, about and viewgpl dialogs
	* Commands/ToolsCommands.cs: make sure dispose is called for the
	NewLayoutDialog
	* Gui/Dialogs/NewLayoutDialog.cs: implement IDisposable
	* Gui/Dialogs/ViewGplDialog.cs: implement IDisposable
	* Gui/Dialogs/TipOfTheDayDialog.cs: implement IDisposable

2004-04-04  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/AssemblyInformation.cs: workaround mono bug
	with Assembly.Load (byte[]). (this fixes radek's bug)
	* Gui/Dialogs/NewProjectDialog.cs: proper string

2004-04-04  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: fix nullref

2004-04-04  John Luke  <jluke@cfl.rr.com>

	* Gui/Pads/FileScout.cs: use Gtk.Stock.Open for the icon
	* Gui/Dialogs/SharpDevelopAboutPanels.cs: call Path.GetFullPath
	on assembly location to get rid of '../AddIn/..' stuff
	send the text to the X clipboard also
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs: register the GType
	to fix weirdness

2004-04-04  Todd Berman  <tberman@sevenl.net>

	* Internal/Codons/MenuItems/MenuItemCodon.cs:
	* Internal/Codons/DialogPanelCodon.cs: change label to _label and
	gettext it

2004-04-04  Nick Drochak  <ndrochak@gol.com>

	* Gui/Dialogs/NewProjectDialog.cs: On double click of icon when there
	is an illegal or empty solution name, do not hide dialog.

2004-04-03  Todd Berman  <tberman@sevenl.net>

	* Gui/Workbench/Layous/SdiWorkspaceLayout.cs: set pref height and width
	on the Documents dockitem to -2 to make gdl-dock attempt to give it
	greedy resizing as much as possible.

2004-04-03  Todd Berman  <tberman@sevenl.net>

	* Services/GettextCatalog.cs: moved to .Core.
	* Makefile.am: reflect above change.

2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Services/File/DefaultFileService.cs:
	* Services/ResourceNotFoundException.cs:
	* Services/DisplayBinding/DisplayBindingService.cs:
	* Services/Project/DefaultProjectService.cs:
	* Services/StatusBar/DefaultStatusBarService.cs:
	* Services/MessageService.cs:
	* Services/ParserService/DefaultParserService.cs:
	Finished gettextifyin the base dll.

2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/ProjectBrowser/BrowserNode/NamedFolderNode.cs:
	* Gui/Pads/ProjectBrowser/NodeBuilder/DefaultDotNetNodeBuilder.cs:
	phantom commit, no one saw this

2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Commands/RunCommands.cs:
	* Commands/FileCommands.cs:
	* Gui/Pads/ProjectBrowser/NodeBuilder/DefaultDotNetNodeBuilder.cs:
	* Internal/ExternalTool/ExternalTool.cs:
	* Internal/ExternalTool/ToolLoader.cs:
	* Internal/Project/Project/Deployment/FileDeploy.cs:
	* Internal/Project/Project/Deployment/AssemblyDeploy.cs:
	* Internal/Project/Project/Deployment/ScriptDeploy.cs:
	* Internal/Project/Project/IncludeFilesDialog.cs:
	* Internal/Project/Project/AbstractProject.cs:
	* Internal/Project/Combine/Combine.cs:
	* Internal/Project/Combine/CombineEntry.cs:
	* Internal/Templates/FileTemplate.cs:
	* Internal/Templates/CodeTemplateLoader.cs:
	* Internal/Templates/ProjectTemplates/CombineDescriptor.cs:
	* Internal/Templates/ProjectTemplates/ProjectDescriptor.cs:
	gettextify, and actually COMPILE it before checking in this time...

2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Commands/MenuItemBuilders.cs:
	* Commands/RunCommands.cs:
	* Commands/ClassBrowserCommands/ClassBrowserCommands.cs:
	* Commands/ProjectCommands.cs:
	* Commands/ProjectBrowserCommands/ResourceFolderNodeCommands.cs:
	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs:
	* Commands/ProjectBrowserCommands/CombineNodeCommands.cs:
	* Commands/FileCommands.cs:
	* Commands/HelpCommands.cs:
	gettextify all of the in-use Commands/


2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/SharpDevelopAboutPanels.cs:
	* Gui/Dialogs/ProjectOptionsDialog.cs:
	* Gui/Dialogs/WordCountDialog.cs:
	* Gui/Dialogs/TreeViewOptions.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/CompileFileProjectOptions.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/GeneralProjectOptions.cs:
	* Gui/Dialogs/OptionPanels/ProjectOptions/DeployFileOptions.cs:
	* Gui/Dialogs/ReferenceDialog/SelectReferenceDialog.cs:
	* Gui/Dialogs/ReferenceDialog/AssemblyReferencePanel.cs:
	* Gui/Dialogs/ReferenceDialog/ProjectReferencePanel.cs:
	* Gui/Dialogs/ReferenceDialog/GacReferencePanel.cs:
	gettextify, this finishes Gui/Dialogs/* that we use currently i think.


2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/OptionPanels/ExternalToolPanel.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/LoadSavePanel.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/BuildPanel.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/CodeGenerationPanel.cs:
	* Gui/Dialogs/OptionPanels/IDEOptions/ProjectAndCombinePanel.cs:
	gettextify


2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/NewProjectDialog.cs:
	* Gui/Dialogs/CommonAboutDialog.cs:
	* Gui/Dialogs/OptionPanels/EditTemplateDialog.cs:
	* Gui/Dialogs/NewFileDialog.cs: gettextified

2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Services/GettextCatalog.cs: changed to use static methods.
	* Gui/Dialogs/CommonAboutDialog.cs: reflecting above change.

2004-04-02  Todd Berman  <tberman@sevenl.net>

	* Makefile.am: Added GettextCatalog.cs
	* Services/GettextCatalog.cs: imported from muine, modified a bit.
	* Gui/Dialogs/CommonAboutDialog.cs: added gettext translatable title
	to test .cs translations.
	* Gui/Dialogs/OptionPanels/IDEOptions/LoadSavePanel.cs: modified to 
	test .glade translations 

2004-04-01  John Luke  <jluke@cfl.rr.com>
	
	* Internal/ExternalTool/ExternalTool.cs:
	store UseOutputPad in xml file

2004-04-01  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/TipOfTheDay.cs: make same change here.

2004-04-01  Todd Berman  <tberman@sevenl.net>

	* Commands/AutostartCommands.cs: default to false for ShowToTD

2004-03-31  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/CommonAboutDialog.cs: fixing the string stuff.
	* Makefile.am: adding -codepage:utf8

2004-03-31  Todd Berman  <tberman@sevenl.net>

	* Gui/Dialogs/CommonAboutDialog.cs: adding miguel :)

2004-03-31  Todd Berman  <tberman@sevenl.net>

	* Internal/Project/AbstractProject.cs: dont include *.swp, *~ or .* in
	search for new files. closes bug #56282.

2004-03-31  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs: fix bug #56273, rename
	Projects tab to Combine.

2004-03-31  John Luke  <jluke@cfl.rr.com>

	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs:
	use stock buttons and put the MessageDialog in a using {}	

2004-03-30  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/ClassScout/ClassScout.cs: stop using Gdk.Threads.Enter and
	.Leave, as they can cause deadlocks, using a GLib.IdleHandler instead.
	Closes bug #56260

2004-03-29  Todd Berman  <tberman@sevenl.net>

	* Gui/Pads/ClassScout/ClassScout.cs: partial fix to bug with double
	clicking not setting focus properly.

2004-03-29  Todd Berman  <tberman@sevenl.net>

	* Commands/RunCommands.cs: When you run, you need to make sure the
	compile completed properly.
	* Gui/Workbench/Layouts/SdiWorkspaceWindow.cs: Mark file/project dirty
	if it becomes dirty, relying on unsaved files is not acceptable.

2004-03-28  Todd Berman  <tberman@sevenl.net>

	* Services/ParserService/DefaultParserService.cs: re-add try catch to
	prevent exceptions from percolating up and blowing up. closes bug
	#56128

2004-03-28  John Luke  <jluke@cfl.rr.com>

	* Services/ParserService/DefaultParserService.cs:
	if filename == null don't switch on it
	* Gui/Pads/TerminalPad.cs: add but dont build yet

2004-03-27  Todd Berman  <tberman@sevenl.net>

	* Commands/FileCommands: remove save as notification, as its useless
	closes bug #56126

2004-03-27  Todd Berman  <tberman@sevenl.net>

	* Internal/Parser/*: update to new parser from upstream.
	* Gui/ContentInterfaces/IParseInformationListener.cs: update.
	* Gui/Pads/ClassScout/NodeBuilder/DefaultDotNetClassScoutNodeBuilder.cs:
		rework to use SortUtilities and a TreeNodeComparer for removal
		this should fix 99% of those strange class browser bugs.
	* Gui/CompletionDatabaseWizard/CreateDBGenerator.cs:
		update to reflect new parser changes.
	* Services/ParserService/*: update from upstream, add some of our mods
	* Services/ProjectService/ParseInformationEventHandler.cs:
	* Services/ClassBrowserIcons/ClassBrowserIconsService.cs:
	* Services/AmbienceService/*:
	* Commands/AutostartCommands.cs: update to reflect other changes.
	* Makefile.am: update with new files.

2004-03-26  John Luke  <jluke@cfl.rr.com>

	* Gui/Dialogs/SharpDevelopAboutPanels.cs:
	enable copy button for assembly version info
	fixes bug #55955
	* Gui/Pads/ProjectBrowser/BrowserNode/FileNode.cs:
	workaround/fix for #55185, a confusing message when
	removing a file from a project, need to revisit it later
	* Gui/Pads/HelpBrowser/MonodocTreePad.cs:
	expand the first row by default
	* Gui/Pads/ProjectBrowser/ProjectBrowserView.cs:
	expand the first row by default

2004-03-25  Todd Berman  <tberman@sevenl.net>

	* Makefile.am:
	* Gui/HtmlControl/MozillaControl.cs:
	* Gui/BrowserDisplayBinding/HtmlViewPane.cs: updated for gecko-sharp

2004-03-25  Todd Berman  <tberman@sevenl.net>

	* Services/File/DefaultFileService.cs: adding a new method of external
	app launching based on gnome vfs stuff, works around broken gnome
	installs.

2004-03-21  John Luke  <jluke@cfl.rr.com>

	* Commands/ProjectBrowserCommands/FolderNodeCommands.cs:
	set the default of the FileSelector to ~/MonoDevelopProjects
	closes bug #55188

2004-03-21  Todd Berman  <tberman@sevenl.net>

	* Commands/FileCommands: fix bug #55869.

2004-03-21  Todd Berman  <tberman@sevenl.net>

	* Commands/VBConverter/ConvertProject.cs:
	* Commands/VBConverter/ConvertBuffer.cs: Changed to use new parser
